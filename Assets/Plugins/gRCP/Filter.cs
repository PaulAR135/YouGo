// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v1/filter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace You.Facade.Proxies.v1 {

  /// <summary>Holder for reflection information generated from v1/filter.proto</summary>
  public static partial class FilterReflection {

    #region Descriptor
    /// <summary>File descriptor for v1/filter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg92MS9maWx0ZXIucHJvdG8SCnlvdS5ycGMudjEaFXYxL2N1c3RvbV90eXBl",
            "cy5wcm90byJ+Cg1GaWx0ZXJSZXF1ZXN0EigKCXJvb3RRdWVyeRgBIAMoCzIV",
            "LnlvdS5ycGMudjEuUm9vdFF1ZXJ5EiQKB29yZGVyQnkYAiADKAsyEy55b3Uu",
            "cnBjLnYxLk9yZGVyQnkSDQoFbGltaXQYAyABKAMSDgoGb2Zmc2V0GAQgASgD",
            "IicKB09yZGVyQnkSDQoFZmllbGQYASABKAkSDQoFb3JkZXIYAiABKAkixwEK",
            "CVJvb3RRdWVyeRIjCgR0eXBlGAEgASgOMhUueW91LnJwYy52MS5RdWVyeVR5",
            "cGUSDAoEbmFtZRgCIAEoCRINCgV2YWx1ZRgDIAEoCRIqCghuZWdhdGlvbhgE",
            "IAEoCzIYLnlvdS5ycGMudjEuTnVsbGFibGVCb29sEioKCG1vZGlmaWVyGAUg",
            "ASgOMhgueW91LnJwYy52MS5Nb2RpZmllclR5cGUSIAoFdW5pb24YBiADKAsy",
            "ES55b3UucnBjLnYxLlVuaW9uIi0KBVVuaW9uEiQKBVVuaW9uGAEgAygLMhUu",
            "eW91LnJwYy52MS5Sb290UXVlcnkqSAoJUXVlcnlUeXBlEhQKEFFVRVJZX1RZ",
            "UEVfTUFUQ0gQABISCg5RVUVSWV9UWVBFX0FORBABEhEKDVFVRVJZX1RZUEVf",
            "T1IQAiq0AQoMTW9kaWZpZXJUeXBlEhgKFE1PRElGSUVSX1RZUEVfRVFVQUxT",
            "EAASFQoRTU9ESUZJRVJfVFlQRV9HVEUQARIUChBNT0RJRklFUl9UWVBFX0dU",
            "EAISFQoRTU9ESUZJRVJfVFlQRV9MVEUQAxIUChBNT0RJRklFUl9UWVBFX0xU",
            "EAQSGgoWTU9ESUZJRVJfVFlQRV9DT05UQUlOUxAFEhQKEE1PRElGSUVSX1RZ",
            "UEVfSU4QBkIYqgIVWW91LkZhY2FkZS5Qcm94aWVzLnYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::You.Facade.Proxies.v1.CustomTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::You.Facade.Proxies.v1.QueryType), typeof(global::You.Facade.Proxies.v1.ModifierType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.FilterRequest), global::You.Facade.Proxies.v1.FilterRequest.Parser, new[]{ "RootQuery", "OrderBy", "Limit", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.OrderBy), global::You.Facade.Proxies.v1.OrderBy.Parser, new[]{ "Field", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.RootQuery), global::You.Facade.Proxies.v1.RootQuery.Parser, new[]{ "Type", "Name", "Value", "Negation", "Modifier", "Union" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Union), global::You.Facade.Proxies.v1.Union.Parser, new[]{ "Union_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum QueryType {
    [pbr::OriginalName("QUERY_TYPE_MATCH")] Match = 0,
    [pbr::OriginalName("QUERY_TYPE_AND")] And = 1,
    [pbr::OriginalName("QUERY_TYPE_OR")] Or = 2,
  }

  public enum ModifierType {
    [pbr::OriginalName("MODIFIER_TYPE_EQUALS")] Equals = 0,
    [pbr::OriginalName("MODIFIER_TYPE_GTE")] Gte = 1,
    [pbr::OriginalName("MODIFIER_TYPE_GT")] Gt = 2,
    [pbr::OriginalName("MODIFIER_TYPE_LTE")] Lte = 3,
    [pbr::OriginalName("MODIFIER_TYPE_LT")] Lt = 4,
    [pbr::OriginalName("MODIFIER_TYPE_CONTAINS")] Contains = 5,
    [pbr::OriginalName("MODIFIER_TYPE_IN")] In = 6,
  }

  #endregion

  #region Messages
  public sealed partial class FilterRequest : pb::IMessage<FilterRequest> {
    private static readonly pb::MessageParser<FilterRequest> _parser = new pb::MessageParser<FilterRequest>(() => new FilterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.FilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRequest(FilterRequest other) : this() {
      rootQuery_ = other.rootQuery_.Clone();
      orderBy_ = other.orderBy_.Clone();
      limit_ = other.limit_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRequest Clone() {
      return new FilterRequest(this);
    }

    /// <summary>Field number for the "rootQuery" field.</summary>
    public const int RootQueryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.RootQuery> _repeated_rootQuery_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.RootQuery.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery> rootQuery_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery> RootQuery {
      get { return rootQuery_; }
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 2;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.OrderBy> _repeated_orderBy_codec
        = pb::FieldCodec.ForMessage(18, global::You.Facade.Proxies.v1.OrderBy.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.OrderBy> orderBy_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.OrderBy>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.OrderBy> OrderBy {
      get { return orderBy_; }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 4;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rootQuery_.Equals(other.rootQuery_)) return false;
      if(!orderBy_.Equals(other.orderBy_)) return false;
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rootQuery_.GetHashCode();
      hash ^= orderBy_.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rootQuery_.WriteTo(output, _repeated_rootQuery_codec);
      orderBy_.WriteTo(output, _repeated_orderBy_codec);
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (Offset != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rootQuery_.CalculateSize(_repeated_rootQuery_codec);
      size += orderBy_.CalculateSize(_repeated_orderBy_codec);
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterRequest other) {
      if (other == null) {
        return;
      }
      rootQuery_.Add(other.rootQuery_);
      orderBy_.Add(other.orderBy_);
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rootQuery_.AddEntriesFrom(input, _repeated_rootQuery_codec);
            break;
          }
          case 18: {
            orderBy_.AddEntriesFrom(input, _repeated_orderBy_codec);
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
          case 32: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderBy : pb::IMessage<OrderBy> {
    private static readonly pb::MessageParser<OrderBy> _parser = new pb::MessageParser<OrderBy>(() => new OrderBy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.FilterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy(OrderBy other) : this() {
      field_ = other.field_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy Clone() {
      return new OrderBy(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private string field_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field {
      get { return field_; }
      set {
        field_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 2;
    private string order_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Order {
      get { return order_; }
      set {
        order_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field != other.Field) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Field.Length != 0) hash ^= Field.GetHashCode();
      if (Order.Length != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Field.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field);
      }
      if (Order.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Field.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field);
      }
      if (Order.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBy other) {
      if (other == null) {
        return;
      }
      if (other.Field.Length != 0) {
        Field = other.Field;
      }
      if (other.Order.Length != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Field = input.ReadString();
            break;
          }
          case 18: {
            Order = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RootQuery : pb::IMessage<RootQuery> {
    private static readonly pb::MessageParser<RootQuery> _parser = new pb::MessageParser<RootQuery>(() => new RootQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RootQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.FilterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RootQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RootQuery(RootQuery other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      value_ = other.value_;
      negation_ = other.negation_ != null ? other.negation_.Clone() : null;
      modifier_ = other.modifier_;
      union_ = other.union_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RootQuery Clone() {
      return new RootQuery(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::You.Facade.Proxies.v1.QueryType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.QueryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "negation" field.</summary>
    public const int NegationFieldNumber = 4;
    private global::You.Facade.Proxies.v1.NullableBool negation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableBool Negation {
      get { return negation_; }
      set {
        negation_ = value;
      }
    }

    /// <summary>Field number for the "modifier" field.</summary>
    public const int ModifierFieldNumber = 5;
    private global::You.Facade.Proxies.v1.ModifierType modifier_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ModifierType Modifier {
      get { return modifier_; }
      set {
        modifier_ = value;
      }
    }

    /// <summary>Field number for the "union" field.</summary>
    public const int UnionFieldNumber = 6;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Union> _repeated_union_codec
        = pb::FieldCodec.ForMessage(50, global::You.Facade.Proxies.v1.Union.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Union> union_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Union>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Union> Union {
      get { return union_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RootQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RootQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(Negation, other.Negation)) return false;
      if (Modifier != other.Modifier) return false;
      if(!union_.Equals(other.union_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (negation_ != null) hash ^= Negation.GetHashCode();
      if (Modifier != 0) hash ^= Modifier.GetHashCode();
      hash ^= union_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (negation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Negation);
      }
      if (Modifier != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Modifier);
      }
      union_.WriteTo(output, _repeated_union_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (negation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Negation);
      }
      if (Modifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modifier);
      }
      size += union_.CalculateSize(_repeated_union_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RootQuery other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.negation_ != null) {
        if (negation_ == null) {
          Negation = new global::You.Facade.Proxies.v1.NullableBool();
        }
        Negation.MergeFrom(other.Negation);
      }
      if (other.Modifier != 0) {
        Modifier = other.Modifier;
      }
      union_.Add(other.union_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::You.Facade.Proxies.v1.QueryType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            if (negation_ == null) {
              Negation = new global::You.Facade.Proxies.v1.NullableBool();
            }
            input.ReadMessage(Negation);
            break;
          }
          case 40: {
            Modifier = (global::You.Facade.Proxies.v1.ModifierType) input.ReadEnum();
            break;
          }
          case 50: {
            union_.AddEntriesFrom(input, _repeated_union_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Union : pb::IMessage<Union> {
    private static readonly pb::MessageParser<Union> _parser = new pb::MessageParser<Union>(() => new Union());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Union> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.FilterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Union() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Union(Union other) : this() {
      union_ = other.union_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Union Clone() {
      return new Union(this);
    }

    /// <summary>Field number for the "Union" field.</summary>
    public const int Union_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.RootQuery> _repeated_union_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.RootQuery.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery> union_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.RootQuery> Union_ {
      get { return union_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Union);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Union other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!union_.Equals(other.union_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= union_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      union_.WriteTo(output, _repeated_union_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += union_.CalculateSize(_repeated_union_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Union other) {
      if (other == null) {
        return;
      }
      union_.Add(other.union_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            union_.AddEntriesFrom(input, _repeated_union_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
