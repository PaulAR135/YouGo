// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v1/rpc_gateway.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace You.Facade.Proxies.v1 {

  /// <summary>Holder for reflection information generated from v1/rpc_gateway.proto</summary>
  public static partial class RpcGatewayReflection {

    #region Descriptor
    /// <summary>File descriptor for v1/rpc_gateway.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcGatewayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChR2MS9ycGNfZ2F0ZXdheS5wcm90bxIKeW91LnJwYy52MRoSZ29vZ2xlL2Vt",
            "cHR5LnByb3RvGhZnb29nbGUvdGltZXN0YW1wLnByb3RvGhV2MS9jdXN0b21f",
            "dHlwZXMucHJvdG8aD3YxL2ZpbHRlci5wcm90byJtChFIaXN0b3JpZXNSZXNw",
            "b25zZRIqCgZzdGF0dXMYASABKA4yGi55b3UucnBjLnYxLlJlc3BvbnNlU3Rh",
            "dHVzEiwKB2hpc3RvcnkYAiADKAsyGy55b3UucnBjLnYxLkhpc3RvcnlSZXNw",
            "b25zZSKtAgoPSGlzdG9yeVJlc3BvbnNlEgoKAmlkGAEgASgEEg4KBnBlZXJJ",
            "ZBgCIAEoBBIQCghsYXRpdHVkZRgDIAEoARIRCglsb25naXR1ZGUYBCABKAES",
            "DQoFdGl0bGUYBSABKAkSEwoLZGVzY3JpcHRpb24YBiABKAkSDwoHaWNvblVy",
            "bBgHIAEoCRITCgtpc0NvbGxlY3RlZBgIIAEoCBIQCghpc0lzc3VlZBgJIAEo",
            "CBILCgN0dGwYCiABKAkSEgoKY2FtcGFpZ25JZBgLIAEoBBIQCghiYXNrZXRJ",
            "ZBgMIAEoBBIRCgljcmVhdGVkQXQYDSABKAkSEAoIaXNzdWVkQXQYDiABKAkS",
            "EwoLaXNEcm9wcGFibGUYDyABKAgSEAoIdmlkZW9VcmwYECABKAkiHgoMUHJp",
            "emVSZXF1ZXN0Eg4KBnBlcmtJZBgBIAEoBCI8Cg5Mb2NrUHJpemVSZXBseRIq",
            "CgZzdGF0dXMYASABKA4yGi55b3UucnBjLnYxLlJlc3BvbnNlU3RhdHVzIlYK",
            "FFByaXplQnlCYXNrZXRSZXF1ZXN0EhAKCGJhc2tldElkGAEgASgEEiwKCmJh",
            "c2tldFR5cGUYAiABKA4yGC55b3UucnBjLnYxLllnQmFza2V0VHlwZSJLChZQ",
            "cml6ZXNCeUJhc2tldFJlc3BvbnNlEjEKBnByaXplcxgBIAMoCzIhLnlvdS5y",
            "cGMudjEuUHJpemVCeUJhc2tldFJlc3BvbnNlIl0KFVByaXplQnlCYXNrZXRS",
            "ZXNwb25zZRIKCgJpZBgBIAEoBBIQCghsYXRpdHVkZRgCIAEoARIRCglMb25n",
            "aXR1ZGUYAyABKAESEwoLaXNEcm9wcGFibGUYBCABKAgiKQoRU3Vic2NyaWJl",
            "UmVzcG9uc2USFAoMZXZlbnRNZXNzYWdlGAEgASgJIkEKE05vdGlmaWNhdGlv",
            "blJlcXVlc3QSKgoKY2xpZW50VHlwZRgBIAEoDjIWLnlvdS5ycGMudjEuQ2xp",
            "ZW50VHlwZSI2Cg9ZZ0Jhc2tldFJlcXVlc3QSEAoIbGF0aXR1ZGUYASABKAES",
            "EQoJbG9uZ2l0dWRlGAIgASgBIjcKEFlnQmFza2V0UmVzcG9uc2USIwoHYmFz",
            "a2V0cxgBIAMoCzISLnlvdS5ycGMudjEuQmFza2V0IrIDCgZCYXNrZXQSEAoI",
            "YmFza2V0SWQYASABKAQSLAoKYmFza2V0VHlwZRgCIAEoDjIYLnlvdS5ycGMu",
            "djEuWWdCYXNrZXRUeXBlEi4KBmNpcmNsZRgDIAEoCzIcLnlvdS5ycGMudjEu",
            "WWdDaXJjbGVSZXNwb25zZUgAEjQKCXJlY3RhbmdsZRgEIAEoCzIfLnlvdS5y",
            "cGMudjEuWWdSZWN0YW5nbGVSZXNwb25zZUgAEjIKB3BvbHlnb24YBSABKAsy",
            "Hy55b3UucnBjLnYxLllnUmVjdGFuZ2xlUmVzcG9uc2VIABIxCg1iYXNrZXRH",
            "ZW9UeXBlGAYgASgOMhoueW91LnJwYy52MS5ZZ0dlb1pvbmVUeXBlcxISCgpj",
            "YW1wYWlnbklkGAcgASgEEg0KBXRpdGxlGAggASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAkgASgJEg8KB2ljb25VcmwYCiABKAkSEAoIUGVya0Nvc3QYCyABKAESFwoP",
            "bWF4UGVya3NQZXJQZWVyGAwgASgNEhYKDnJlZkNhbXBhaWduSWRzGA0gAygE",
            "Qg8KDWJhc2tldEdlb1pvbmUiZwoQWWdDaXJjbGVSZXNwb25zZRIWCg5jZW50",
            "ZXJMYXRpdHVkZRgBIAEoARIXCg9jZW50ZXJMb25naXR1ZGUYAiABKAESDgoG",
            "cmFkaXVzGAMgASgBEhIKCnJhZGl1c1VuaXQYBCABKAkiSwoTWWdSZWN0YW5n",
            "bGVSZXNwb25zZRI0CgxsYXRMbmdQb2ludHMYASADKAsyHi55b3UucnBjLnYx",
            "LllnTG9jYXRpb25SZXNwb25zZSIkChJZZ0xvY2F0aW9uUmVzcG9uc2USDgoG",
            "cG9pbnRzGAEgAygBIhMKEUdldFByb2ZpbGVSZXF1ZXN0IhQKElByb2ZpbGVD",
            "b3N0UmVxdWVzdCIVChNZd1JlbWF0Y2hpbmdSZXF1ZXN0IgsKCUFkUmVxdWVz",
            "dCK/AgoMVG9waWNSZXF1ZXN0EjMKCHByaW9yaXR5GAEgASgOMiEueW91LnJw",
            "Yy52MS5Ub3BpY1JlcXVlc3QuUHJpb3JpdHkSEwoLc2VuZGVyTG9naW4YAiAB",
            "KAkSFQoNcmVjZWl2ZXJMb2dpbhgDIAEoCRIqCgpjbGllbnRUeXBlGAQgASgO",
            "MhYueW91LnJwYy52MS5DbGllbnRUeXBlEjwKEnByb2ZpbGVJbmZvUmVxdWVz",
            "dBgFIAEoCzIeLnlvdS5ycGMudjEuUHJvZmlsZUluZm9SZXF1ZXN0SAASLgoL",
            "Y2hhdFJlcXVlc3QYBiABKAsyFy55b3UucnBjLnYxLkNoYXRSZXF1ZXN0SAAi",
            "KQoIUHJpb3JpdHkSBwoDTG93EAASCgoGTWlkZGxlEAESCAoESGlnaBACQgkK",
            "B3JlcXVlc3QiJQoSUHJvZmlsZUluZm9SZXF1ZXN0Eg8KB3BheWxvYWQYAiAB",
            "KAwiTQoLQ2hhdFJlcXVlc3QSDwoHbWVzc2FnZRgBIAEoCRItCgljcmVhdGVk",
            "QXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIuwBChROb3Rp",
            "ZmljYXRpb25SZXNwb25zZRITCgtzZW5kZXJMb2dpbhgBIAEoCRIVCg1yZWNl",
            "aXZlckxvZ2luGAIgASgJEjIKDWV2ZW50UmVzcG9uc2UYAyABKAsyGS55b3Uu",
            "cnBjLnYxLkV2ZW50UmVzcG9uc2VIABI2Cg9wcm9maWxlUmVzcG9uc2UYBCAB",
            "KAsyGy55b3UucnBjLnYxLlByb2ZpbGVSZXNwb25zZUgAEjAKDGNoYXRSZXNw",
            "b25zZRgFIAEoCzIYLnlvdS5ycGMudjEuQ2hhdFJlc3BvbnNlSABCCgoIcmVz",
            "cG9uc2UinQIKDUV2ZW50UmVzcG9uc2USQAoUYmFsYW5jZVJlY2VpdmVkRXZl",
            "bnQYASABKAsyIC55b3UucnBjLnYxLkJhbGFuY2VSZWNlaXZlZEV2ZW50SAAS",
            "QAoUcHJvZmlsZVJlcGxhY2VkRXZlbnQYAiABKAsyIC55b3UucnBjLnYxLlBy",
            "b2ZpbGVSZXBsYWNlZEV2ZW50SAASNgoPcGVya0xvY2tlZEV2ZW50GAMgASgL",
            "MhsueW91LnJwYy52MS5QZXJrTG9ja2VkRXZlbnRIABJAChR5Z0Jhc2tldENo",
            "YW5nZWRFdmVudBgEIAEoCzIgLnlvdS5ycGMudjEuWWdCYXNrZXRDaGFuZ2Vk",
            "RXZlbnRIAEIOCgxldmVudE1lc3NhZ2UiIgoPUHJvZmlsZVJlc3BvbnNlEg8K",
            "B3BheWxvYWQYAiABKAwiDwoNVG9waWNSZXNwb25zZSISChBMb2NhdGlvblJl",
            "c3BvbnNlImUKDENoYXRSZXNwb25zZRIVCg1yZWNlaXZlckxvZ2luGAEgASgJ",
            "Eg8KB21lc3NhZ2UYAiABKAkSLQoJY3JlYXRlZEF0GAMgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcCIrChNCbG9ja1Byb2ZpbGVSZXF1ZXN0EhQK",
            "DGJsb2NrZWRMb2dpbhgBIAEoCSJBCg9DYXRhbG9nc1JlcXVlc3QSLgoMbGFu",
            "Z3VhZ2VDb2RlGAEgASgOMhgueW91LnJwYy52MS5MYW5ndWFnZUNvZGUiOAoQ",
            "Q2F0YWxvZ3NSZXNwb25zZRIkCgdjYXRhbG9nGAEgASgLMhMueW91LnJwYy52",
            "MS5DYXRhbG9nIqUBCgdDYXRhbG9nEiMKB3BhcmVudHMYASADKAsyEi55b3Uu",
            "cnBjLnYxLlBhcmVudBIjCgdnZW5kZXJzGAIgAygLMhIueW91LnJwYy52MS5H",
            "ZW5kZXISJwoJbGFuZ3VhZ2VzGAMgAygLMhQueW91LnJwYy52MS5MYW5ndWFn",
            "ZRInCgltYXJyaWFnZXMYBCADKAsyFC55b3UucnBjLnYxLk1hcnJpYWdlIisK",
            "BlBhcmVudBIMCgRjb2RlGAEgASgJEhMKC2Rpc3BsYXlOYW1lGAIgASgJIisK",
            "BkdlbmRlchIMCgRjb2RlGAEgASgJEhMKC2Rpc3BsYXlOYW1lGAIgASgJIi0K",
            "CExhbmd1YWdlEgwKBGNvZGUYASABKAkSEwoLZGlzcGxheU5hbWUYAiABKAki",
            "LQoITWFycmlhZ2USDAoEY29kZRgBIAEoCRITCgtkaXNwbGF5TmFtZRgCIAEo",
            "CSLnAQoTWXNSZW1hdGNoaW5nUmVxdWVzdBINCgVsaW1pdBgBIAEoAxIOCgZv",
            "ZmZzZXQYAiABKAMSKgoGbWluQWdlGAMgASgLMhoueW91LnJwYy52MS5OdWxs",
            "YWJsZVVJbnQzMhIqCgZtYXhBZ2UYBCABKAsyGi55b3UucnBjLnYxLk51bGxh",
            "YmxlVUludDMyEg8KB2dlbmRlcnMYBSADKAkSEQoJbWFycmlhZ2VzGAYgAygJ",
            "Eg8KB3BhcmVudHMYByADKAkSEQoJbGFuZ3VhZ2VzGAggAygJEhEKCUludGVy",
            "ZXN0cxgJIAMoBCJTCg1NZXRyaWNSZXF1ZXN0EhIKCmNhbXBhaWduSWQYASAB",
            "KAQSDAoEYWRJZBgCIAEoBBIgChh3YXRjaGVkQWRUcnhJZHNUb0NvbmZpcm0Y",
            "AyADKAQicgoPTG9jYXRpb25SZXF1ZXN0EhAKCGxhdGl0dWRlGAEgASgBEhEK",
            "CWxvbmdpdHVkZRgCIAEoARI6Cg9hZG1pbmlzdHJhdGl2ZXMYAyADKAsyIS55",
            "b3UucnBjLnYxLkFkbWluaXN0cmF0aXZlUmVxdWVzdCIgCg9Jc0V4aXN0c1Jl",
            "cXVlc3QSDQoFbG9naW4YASABKAkiogEKGlF1ZXJ5UmVwbGFjZVByb2ZpbGVS",
            "ZXF1ZXN0EioKCmNsaWVudFR5cGUYASABKA4yFi55b3UucnBjLnYxLkNsaWVu",
            "dFR5cGUSKgoKcHVibGljSW5mbxgCIAEoCzIWLnlvdS5ycGMudjEuUHVibGlj",
            "SW5mbxIsCgtwcml2YXRlSW5mbxgDIAEoCzIXLnlvdS5ycGMudjEuUHJpdmF0",
            "ZUluZm8iwwEKClB1YmxpY0luZm8SLgoMcGVyc29uYWxJbmZvGAEgASgLMhgu",
            "eW91LnJwYy52MS5QZXJzb25hbEluZm8SJwoJaW50ZXJlc3RzGAIgAygLMhQu",
            "eW91LnJwYy52MS5JbnRlcmVzdBI2ChB5b3VTb2NpYWxTZXR0aW5nGAMgASgL",
            "MhwueW91LnJwYy52MS5Zb3VTb2NpYWxTZXR0aW5nEiQKB2dlb0luZm8YBCAB",
            "KAsyEy55b3UucnBjLnYxLkdlb0luZm8iOgoLUHJpdmF0ZUluZm8SKwoHcGF5",
            "bG9hZBgBIAEoCzIaLnlvdS5ycGMudjEuTnVsbGFibGVTdHJpbmcixQIKDFBl",
            "cnNvbmFsSW5mbxINCgVsb2dpbhgBIAEoCRIOCgZnZW5kZXIYAiABKAkSEAoI",
            "bGFuZ3VhZ2UYAyABKAkSEAoIcGFyZW50YWwYBCABKAkSEAoIbWFycmlhZ2UY",
            "BSABKAkSMgoLZGF0ZU9mQmlydGgYBiABKAsyHS55b3UucnBjLnYxLk51bGxh",
            "YmxlVGltZVN0YW1wEhMKC2hhc0xhc3ROYW1lGAcgASgIEhQKDGhhc0ZpcnN0",
            "TmFtZRgIIAEoCBIgChhwcm9maWxlU3RyZW5ndGhJblBlcmNlbnQYCSABKAES",
            "IQoZaW50ZXJlc3RTdHJlbmd0aEluUGVyY2VudBgKIAEoARIcChRreWNTdHJl",
            "bmd0aEluUGVyY2VudBgLIAEoARIeChZ0b3RhbFN0cmVuZ3RoSW5QZXJjZW50",
            "GAwgASgBImMKB0dlb0luZm8SEAoIbGF0aXR1ZGUYASABKAESEQoJbG9uZ2l0",
            "dWRlGAIgASgBEjMKD2FkbWluaXN0cmF0aXZlcxgDIAMoCzIaLnlvdS5ycGMu",
            "djEuQWRtaW5pc3RyYXRpdmUiMgoOQWRtaW5pc3RyYXRpdmUSEgoKYWRtaW5M",
            "ZXZlbBgBIAEoBRIMCgRuYW1lGAIgASgJIpQCChBZb3VTb2NpYWxTZXR0aW5n",
            "EhUKDWlzUmVhZHlUb0NoYXQYASABKAgSGQoRaXNGaXJzdE5hbWVTaGFyZWQY",
            "AiABKAgSGAoQaXNMYXN0TmFtZVNoYXJlZBgDIAEoCBIXCg9pc0FkZHJlc3NT",
            "aGFyZWQYBCABKAgSFgoOaXNHZW5kZXJTaGFyZWQYBSABKAgSGAoQaXNMYW5n",
            "dWFnZVNoYXJlZBgGIAEoCBIYChBpc1BhcmVudGFsU2hhcmVkGAcgASgIEhgK",
            "EGlzTWFycmlhZ2VTaGFyZWQYCCABKAgSGgoSaXNEYXlPZkJpcnRoU2hhcmVk",
            "GAkgASgIEhkKEXNoYXJlZEludGVyZXN0SWRzGAogAygEIqgBCghJbnRlcmVz",
            "dBIKCgJpZBgBIAEoBBISCgpjYXRlZ29yeUlkGAIgASgEEg8KB2dyb3VwSWQY",
            "AyABKAQSEAoIcGFyZW50SWQYBCABKAQSEQoJaXNQcmltYXJ5GAUgASgIEhIK",
            "CmlzTmVnYXRpdmUYBiABKAgSMgoLbGFzdFVwZGF0ZWQYByABKAsyHS55b3Uu",
            "cnBjLnYxLk51bGxhYmxlVGltZVN0YW1wIisKG09iamVjdGlvbmFibGVDb250",
            "ZW50UmVxdWVzdBIMCgRhZElkGAEgASgEIjkKFUFkbWluaXN0cmF0aXZlUmVx",
            "dWVzdBISCgphZG1pbkxldmVsGAEgASgFEgwKBG5hbWUYAiABKAkiOAoOQmFs",
            "YW5jZVJlcXVlc3QSJgoIY3VycmVuY3kYASABKA4yFC55b3UucnBjLnYxLkN1",
            "cnJlbmN5Ik4KD1BlZXJUeFJlc3BvbnNlcxISCgp0b3RhbENvdW50GAEgASgF",
            "EicKA3R4cxgCIAMoCzIaLnlvdS5ycGMudjEuUGVlclR4UmVzcG9uc2UirQIK",
            "DlBlZXJUeFJlc3BvbnNlEioKBnN0YXR1cxgBIAEoDjIaLnlvdS5ycGMudjEu",
            "UmVzcG9uc2VTdGF0dXMSDQoFdHJ4SWQYAiABKAQSDgoGYW1vdW50GAMgASgB",
            "EgsKA2ZlZRgEIAEoARIpCgVzdGFydBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASKwoEc3RvcBgGIAEoCzIdLnlvdS5ycGMudjEuTnVsbGFi",
            "bGVUaW1lU3RhbXASEwoLZGVzY3JpcHRpb24YByABKAkSJwoEVHlwZRgIIAEo",
            "DjIZLnlvdS5ycGMudjEuT3BlcmF0aW9uVHlwZRItCgljcmVhdGVkQXQYCSAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIhAKDk1ldHJpY1Jlc3Bv",
            "bnNlIiQKEElzRXhpc3RzUmVzcG9uc2USEAoIaXNFeGlzdHMYASABKAgiZQoT",
            "UHJvZmlsZUNvc3RSZXNwb25zZRITCgtwcm9maWxlQ29zdBgBIAEoARIVCg1p",
            "bnRlcmVzdHNDb3N0GAIgASgBEg8KB2t5Y0Nvc3QYAyABKAESEQoJdG90YWxD",
            "b3N0GAQgASgBIm4KEkdldFByb2ZpbGVSZXNwb25zZRIqCgpwdWJsaWNJbmZv",
            "GAEgASgLMhYueW91LnJwYy52MS5QdWJsaWNJbmZvEiwKC3ByaXZhdGVJbmZv",
            "GAIgASgLMhcueW91LnJwYy52MS5Qcml2YXRlSW5mbyISChBJbnRlcmVzdFJl",
            "c3BvbnNlIkYKEkFkSGlzdG9yeVJlc3BvbnNlcxIwCglhZEhpc3RvcnkYASAD",
            "KAsyHS55b3UucnBjLnYxLkFkSGlzdG9yeVJlc3BvbnNlIvkCChFBZEhpc3Rv",
            "cnlSZXNwb25zZRIMCgRhZElkGAEgASgEEhIKCmFjdGlvblR5cGUYAiABKAQS",
            "FAoMYnRuVHh0U3RyaW5nGAMgASgJEhMKC2lzQnRuRXhpc3RzGAQgASgIEg8K",
            "B2lzSW1hZ2UYBSABKAgSDgoGbGVuZ3RoGAYgASgBEhEKCWFjdGlvblVybBgH",
            "IAEoCRIQCgh2aWRlb1VybBgIIAEoCRIVCg1jb3ZlckltYWdlVXJsGAkgASgJ",
            "EhIKCmNhbXBhaWduSWQYCiABKAQSDAoEY29zdBgLIAEoARIaChJkZXNjcmlw",
            "dGlvblByaW1hcnkYDCABKAkSHgoWZGVzY3JpcHRpb25QcmltYXJ5Qm9sZBgN",
            "IAEoCBIcChRkZXNjcmlwdGlvblNlY29uZGFyeRgOIAEoCRIPCgdsb2dvVXJs",
            "GA8gASgJEi0KCWV4cGlyZWRBdBgQIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXAiMgoLQWRSZXNwb25zZXMSIwoDQWRzGAEgAygLMhYueW91LnJw",
            "Yy52MS5BZFJlc3BvbnNlIvICCgpBZFJlc3BvbnNlEgwKBGFkSWQYASABKAQS",
            "EgoKYWN0aW9uVHlwZRgCIAEoBBIUCgxidG5UeHRTdHJpbmcYAyABKAkSEwoL",
            "aXNCdG5FeGlzdHMYBCABKAgSDgoGbGVuZ3RoGAUgASgBEhEKCWFjdGlvblVy",
            "bBgGIAEoCRIQCgh2aWRlb1VybBgHIAEoCRIVCg1jb3ZlckltYWdlVXJsGAgg",
            "ASgJEhIKCmNhbXBhaWduSWQYCSABKAQSDAoEY29zdBgKIAEoARIaChJkZXNj",
            "cmlwdGlvblByaW1hcnkYCyABKAkSHgoWZGVzY3JpcHRpb25QcmltYXJ5Qm9s",
            "ZBgMIAEoCBIcChRkZXNjcmlwdGlvblNlY29uZGFyeRgNIAEoCRIPCgdsb2dv",
            "VXJsGA4gASgJEi0KCWV4cGlyZWRBdBgPIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASDwoHaXNJbWFnZRgQIAEoCCIWChRZd1JlbWF0Y2hpbmdS",
            "ZXNwb25zZSJGChRZc1JlbWF0Y2hpbmdSZXNwb25zZRIuCghwcm9maWxlcxgB",
            "IAMoCzIcLnlvdS5ycGMudjEuWXNNYXRjaGVkUHJvZmlsZSKSAgoQWXNNYXRj",
            "aGVkUHJvZmlsZRINCgVsb2dpbhgBIAEoCRIzCg9nZW5kZXJMb2NhbGl6ZWQY",
            "AiABKAsyGi55b3UucnBjLnYxLk51bGxhYmxlU3RyaW5nEjUKEW1hcnJpYWdl",
            "TG9jYWxpemVkGAMgASgLMhoueW91LnJwYy52MS5OdWxsYWJsZVN0cmluZxI1",
            "ChFwYXJlbnRhbExvY2FsaXplZBgEIAEoCzIaLnlvdS5ycGMudjEuTnVsbGFi",
            "bGVTdHJpbmcSNQoRbGFuZ3VhZ2VMb2NhbGl6ZWQYBSABKAsyGi55b3UucnBj",
            "LnYxLk51bGxhYmxlU3RyaW5nEhUKDWlzUmVhZHlUb0NoYXQYBiABKAgiHgoc",
            "T2JqZWN0aW9uYWJsZUNvbnRlbnRSZXNwb25zZSIWChRCbG9ja1Byb2ZpbGVS",
            "ZXNwb25zZSJhChRCYWxhbmNlUmVjZWl2ZWRFdmVudBIRCglhdmFpbGFibGUY",
            "ASABKAESDgoGZnJvemVuGAIgASgBEiYKCGN1cnJlbmN5GAMgASgOMhQueW91",
            "LnJwYy52MS5DdXJyZW5jeSIzCg9QZXJrTG9ja2VkRXZlbnQSEAoIYmFza2V0",
            "SWQYASABKAQSDgoGcGVya0lkGAIgASgEIlsKFFlnQmFza2V0Q2hhbmdlZEV2",
            "ZW50EkMKFFlnQmFza2V0VmlzaWJpbGl0aWVzGAEgAygLMiUueW91LnJwYy52",
            "MS5ZZ0Jhc2tldFZpc2liaWxpdGllc0V2ZW50IkYKGVlnQmFza2V0VmlzaWJp",
            "bGl0aWVzRXZlbnQSEAoIYmFza2V0SWQYASABKAQSFwoPSXNCYXNrZXRWaXNp",
            "YmxlGAIgASgIIqIBChRQcm9maWxlUmVwbGFjZWRFdmVudBIwChBzZW5kZXJD",
            "bGllbnRUeXBlGAEgASgOMhYueW91LnJwYy52MS5DbGllbnRUeXBlEioKCnB1",
            "YmxpY0luZm8YAiABKAsyFi55b3UucnBjLnYxLlB1YmxpY0luZm8SLAoLcHJp",
            "dmF0ZUluZm8YAyABKAsyFy55b3UucnBjLnYxLlByaXZhdGVJbmZvKr8CCg5S",
            "ZXNwb25zZVN0YXR1cxIJCgVFTVBUWRAAEgsKB1NVQ0NFU1MQARIKCgZGQUlM",
            "RUQQAhI8CjhZT1VfV0FUQ0hfU0VSVklDRV9PQkpFQ1RJT05BQkxFX0NPTlRF",
            "TlRfU1RBVFVTX05PVF9GT1VORBADEhkKFVRSQU5TQUNUSU9OX0NPTVBMRVRF",
            "RBAEEhoKFlRSQU5TQUNUSU9OX0lOUFJPR1JFU1MQBRIcChhUUkFOU0FDVElP",
            "Tl9QUkVQQVJFVE9QQVkQBhIXChNUUkFOU0FDVElPTl9DUkVBVEVEEAcSHQoZ",
            "VVNFUl9DT05ORUNUSU9OX05PVF9GT1VORBAIEiIKHlVTRVJfQ09OTkVDVElP",
            "Tl9BTFJFQURZX0VYSVNUUxAJEhoKFlVTRVJfUFJPRklMRV9OT1RfRk9VTkQQ",
            "Cio6Cg1PcGVyYXRpb25UeXBlEgsKB0RFUE9TSVQQABIMCghUUkFOU0ZFUhAB",
            "Eg4KCldJVEhEUkFXQUwQAio+CgxZZ0Jhc2tldFR5cGUSCQoFUEVSS1MQABII",
            "CgRDQVNIEAESBgoCQUQQAhIHCgNORlQQAxIICgRMSUtFEAQqTgoOWWdHZW9a",
            "b25lVHlwZXMSFAoQVU5LTk9XTl9HRU9fWk9ORRAAEgoKBkNJUkNMRRABEgsK",
            "B1BPTFlHT04QAhINCglSRUNUQU5HTEUQAyo4CghDdXJyZW5jeRIHCgNFVVIQ",
            "ABIICgRZT1VDEAESBwoDRVRIEAISBwoDUlVCEAMSBwoDVVNEEAQqJgoMTGFu",
            "Z3VhZ2VDb2RlEgYKAkVOEAASBgoCREUQARIGCgJSVRACKjgKCkNsaWVudFR5",
            "cGUSCQoFRW1wdHkQABIKCgZNb2JpbGUQARIHCgNXZWIQAhIKCgZTeXN0ZW0Q",
            "AzLHBAoPWW91V2F0Y2hTZXJ2aWNlEkEKD0dldEF2YWlsYWJsZUFkcxIVLnlv",
            "dS5ycGMudjEuQWRSZXF1ZXN0GhcueW91LnJwYy52MS5BZFJlc3BvbnNlcxJH",
            "CgpHZXRIaXN0b3J5EhkueW91LnJwYy52MS5GaWx0ZXJSZXF1ZXN0Gh4ueW91",
            "LnJwYy52MS5BZEhpc3RvcnlSZXNwb25zZXMSUQoMWXdSZW1hdGNoaW5nEh8u",
            "eW91LnJwYy52MS5Zd1JlbWF0Y2hpbmdSZXF1ZXN0GiAueW91LnJwYy52MS5Z",
            "d1JlbWF0Y2hpbmdSZXNwb25zZRJxChxEZXRlY3RlZE9iamVjdGlvbmFibGVD",
            "b250ZW50EicueW91LnJwYy52MS5PYmplY3Rpb25hYmxlQ29udGVudFJlcXVl",
            "c3QaKC55b3UucnBjLnYxLk9iamVjdGlvbmFibGVDb250ZW50UmVzcG9uc2US",
            "TgoVVHJhY2tJbXByZXNzaW9uTWV0cmljEhkueW91LnJwYy52MS5NZXRyaWNS",
            "ZXF1ZXN0GhoueW91LnJwYy52MS5NZXRyaWNSZXNwb25zZRJJChBUcmFja1dh",
            "dGNoTWV0cmljEhkueW91LnJwYy52MS5NZXRyaWNSZXF1ZXN0GhoueW91LnJw",
            "Yy52MS5NZXRyaWNSZXNwb25zZRJHCg5UcmFja0N0YU1ldHJpYxIZLnlvdS5y",
            "cGMudjEuTWV0cmljUmVxdWVzdBoaLnlvdS5ycGMudjEuTWV0cmljUmVzcG9u",
            "c2UyZQoQWW91U29jaWFsU2VydmljZRJRCgxZc1JlbWF0Y2hpbmcSHy55b3Uu",
            "cnBjLnYxLllzUmVtYXRjaGluZ1JlcXVlc3QaIC55b3UucnBjLnYxLllzUmVt",
            "YXRjaGluZ1Jlc3BvbnNlMqoDCg5Qcm9maWxlU2VydmljZRJRCgxCbG9ja1By",
            "b2ZpbGUSHy55b3UucnBjLnYxLkJsb2NrUHJvZmlsZVJlcXVlc3QaIC55b3Uu",
            "cnBjLnYxLkJsb2NrUHJvZmlsZVJlc3BvbnNlEkgKC0dldENhdGFsb2dzEhsu",
            "eW91LnJwYy52MS5DYXRhbG9nc1JlcXVlc3QaHC55b3UucnBjLnYxLkNhdGFs",
            "b2dzUmVzcG9uc2USVwoUR2V0UHJvZmlsZUNvc3RJbllvdWMSHi55b3UucnBj",
            "LnYxLlByb2ZpbGVDb3N0UmVxdWVzdBofLnlvdS5ycGMudjEuUHJvZmlsZUNv",
            "c3RSZXNwb25zZRJVChNRdWVyeVJlcGxhY2VQcm9maWxlEiYueW91LnJwYy52",
            "MS5RdWVyeVJlcGxhY2VQcm9maWxlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eRJLCgpHZXRQcm9maWxlEh0ueW91LnJwYy52MS5HZXRQcm9maWxl",
            "UmVxdWVzdBoeLnlvdS5ycGMudjEuR2V0UHJvZmlsZVJlc3BvbnNlMqEBChBZ",
            "b3VXYWxsZXRTZXJ2aWNlEkIKDFF1ZXJ5QmFsYW5jZRIaLnlvdS5ycGMudjEu",
            "QmFsYW5jZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSSQoPR2V0",
            "VHJhbnNhY3Rpb25zEhkueW91LnJwYy52MS5GaWx0ZXJSZXF1ZXN0GhsueW91",
            "LnJwYy52MS5QZWVyVHhSZXNwb25zZXMyiAMKEFlvdUdvRGVtb1NlcnZpY2US",
            "RwoKR2V0QmFza2V0cxIbLnlvdS5ycGMudjEuWWdCYXNrZXRSZXF1ZXN0Ghwu",
            "eW91LnJwYy52MS5ZZ0Jhc2tldFJlc3BvbnNlEkgKDVN1YnNjcmliZVRlc3QS",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkaHS55b3UucnBjLnYxLlN1YnNjcmli",
            "ZVJlc3BvbnNlMAESWQoRR2V0UHJpemVzQnlCYXNrZXQSIC55b3UucnBjLnYx",
            "LlByaXplQnlCYXNrZXRSZXF1ZXN0GiIueW91LnJwYy52MS5Qcml6ZXNCeUJh",
            "c2tldFJlc3BvbnNlEkEKCUxvY2tQcml6ZRIYLnlvdS5ycGMudjEuUHJpemVS",
            "ZXF1ZXN0GhoueW91LnJwYy52MS5Mb2NrUHJpemVSZXBseRJDCgpHZXRIaXN0",
            "b3J5EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gh0ueW91LnJwYy52MS5IaXN0",
            "b3JpZXNSZXNwb25zZTJaCgpHZW9TZXJ2aWNlEkwKD1NldFBlZXJMb2NhdGlv",
            "bhIbLnlvdS5ycGMudjEuTG9jYXRpb25SZXF1ZXN0GhwueW91LnJwYy52MS5M",
            "b2NhdGlvblJlc3BvbnNlMlQKC1VzZXJTZXJ2aWNlEkUKCElzRXhpc3RzEhsu",
            "eW91LnJwYy52MS5Jc0V4aXN0c1JlcXVlc3QaHC55b3UucnBjLnYxLklzRXhp",
            "c3RzUmVzcG9uc2UyoAEKD1RyYW5zZmVyU2VydmljZRI7CgRTZW5kEhgueW91",
            "LnJwYy52MS5Ub3BpY1JlcXVlc3QaGS55b3UucnBjLnYxLlRvcGljUmVzcG9u",
            "c2USUAoJU3Vic2NyaWJlEh8ueW91LnJwYy52MS5Ob3RpZmljYXRpb25SZXF1",
            "ZXN0GiAueW91LnJwYy52MS5Ob3RpZmljYXRpb25SZXNwb25zZTABQhiqAhVZ",
            "b3UuRmFjYWRlLlByb3hpZXMudjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::You.Facade.Proxies.v1.CustomTypesReflection.Descriptor, global::You.Facade.Proxies.v1.FilterReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::You.Facade.Proxies.v1.ResponseStatus), typeof(global::You.Facade.Proxies.v1.OperationType), typeof(global::You.Facade.Proxies.v1.YgBasketType), typeof(global::You.Facade.Proxies.v1.YgGeoZoneTypes), typeof(global::You.Facade.Proxies.v1.Currency), typeof(global::You.Facade.Proxies.v1.LanguageCode), typeof(global::You.Facade.Proxies.v1.ClientType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.HistoriesResponse), global::You.Facade.Proxies.v1.HistoriesResponse.Parser, new[]{ "Status", "History" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.HistoryResponse), global::You.Facade.Proxies.v1.HistoryResponse.Parser, new[]{ "Id", "PeerId", "Latitude", "Longitude", "Title", "Description", "IconUrl", "IsCollected", "IsIssued", "Ttl", "CampaignId", "BasketId", "CreatedAt", "IssuedAt", "IsDroppable", "VideoUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PrizeRequest), global::You.Facade.Proxies.v1.PrizeRequest.Parser, new[]{ "PerkId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.LockPrizeReply), global::You.Facade.Proxies.v1.LockPrizeReply.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PrizeByBasketRequest), global::You.Facade.Proxies.v1.PrizeByBasketRequest.Parser, new[]{ "BasketId", "BasketType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PrizesByBasketResponse), global::You.Facade.Proxies.v1.PrizesByBasketResponse.Parser, new[]{ "Prizes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PrizeByBasketResponse), global::You.Facade.Proxies.v1.PrizeByBasketResponse.Parser, new[]{ "Id", "Latitude", "Longitude", "IsDroppable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.SubscribeResponse), global::You.Facade.Proxies.v1.SubscribeResponse.Parser, new[]{ "EventMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.NotificationRequest), global::You.Facade.Proxies.v1.NotificationRequest.Parser, new[]{ "ClientType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgBasketRequest), global::You.Facade.Proxies.v1.YgBasketRequest.Parser, new[]{ "Latitude", "Longitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgBasketResponse), global::You.Facade.Proxies.v1.YgBasketResponse.Parser, new[]{ "Baskets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Basket), global::You.Facade.Proxies.v1.Basket.Parser, new[]{ "BasketId", "BasketType", "Circle", "Rectangle", "Polygon", "BasketGeoType", "CampaignId", "Title", "Description", "IconUrl", "PerkCost", "MaxPerksPerPeer", "RefCampaignIds" }, new[]{ "BasketGeoZone" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgCircleResponse), global::You.Facade.Proxies.v1.YgCircleResponse.Parser, new[]{ "CenterLatitude", "CenterLongitude", "Radius", "RadiusUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgRectangleResponse), global::You.Facade.Proxies.v1.YgRectangleResponse.Parser, new[]{ "LatLngPoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgLocationResponse), global::You.Facade.Proxies.v1.YgLocationResponse.Parser, new[]{ "Points" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.GetProfileRequest), global::You.Facade.Proxies.v1.GetProfileRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ProfileCostRequest), global::You.Facade.Proxies.v1.ProfileCostRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YwRematchingRequest), global::You.Facade.Proxies.v1.YwRematchingRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdRequest), global::You.Facade.Proxies.v1.AdRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.TopicRequest), global::You.Facade.Proxies.v1.TopicRequest.Parser, new[]{ "Priority", "SenderLogin", "ReceiverLogin", "ClientType", "ProfileInfoRequest", "ChatRequest" }, new[]{ "Request" }, new[]{ typeof(global::You.Facade.Proxies.v1.TopicRequest.Types.Priority) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ProfileInfoRequest), global::You.Facade.Proxies.v1.ProfileInfoRequest.Parser, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ChatRequest), global::You.Facade.Proxies.v1.ChatRequest.Parser, new[]{ "Message", "CreatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.NotificationResponse), global::You.Facade.Proxies.v1.NotificationResponse.Parser, new[]{ "SenderLogin", "ReceiverLogin", "EventResponse", "ProfileResponse", "ChatResponse" }, new[]{ "Response" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.EventResponse), global::You.Facade.Proxies.v1.EventResponse.Parser, new[]{ "BalanceReceivedEvent", "ProfileReplacedEvent", "PerkLockedEvent", "YgBasketChangedEvent" }, new[]{ "EventMessage" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ProfileResponse), global::You.Facade.Proxies.v1.ProfileResponse.Parser, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.TopicResponse), global::You.Facade.Proxies.v1.TopicResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.LocationResponse), global::You.Facade.Proxies.v1.LocationResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ChatResponse), global::You.Facade.Proxies.v1.ChatResponse.Parser, new[]{ "ReceiverLogin", "Message", "CreatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.BlockProfileRequest), global::You.Facade.Proxies.v1.BlockProfileRequest.Parser, new[]{ "BlockedLogin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.CatalogsRequest), global::You.Facade.Proxies.v1.CatalogsRequest.Parser, new[]{ "LanguageCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.CatalogsResponse), global::You.Facade.Proxies.v1.CatalogsResponse.Parser, new[]{ "Catalog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Catalog), global::You.Facade.Proxies.v1.Catalog.Parser, new[]{ "Parents", "Genders", "Languages", "Marriages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Parent), global::You.Facade.Proxies.v1.Parent.Parser, new[]{ "Code", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Gender), global::You.Facade.Proxies.v1.Gender.Parser, new[]{ "Code", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Language), global::You.Facade.Proxies.v1.Language.Parser, new[]{ "Code", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Marriage), global::You.Facade.Proxies.v1.Marriage.Parser, new[]{ "Code", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YsRematchingRequest), global::You.Facade.Proxies.v1.YsRematchingRequest.Parser, new[]{ "Limit", "Offset", "MinAge", "MaxAge", "Genders", "Marriages", "Parents", "Languages", "Interests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.MetricRequest), global::You.Facade.Proxies.v1.MetricRequest.Parser, new[]{ "CampaignId", "AdId", "WatchedAdTrxIdsToConfirm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.LocationRequest), global::You.Facade.Proxies.v1.LocationRequest.Parser, new[]{ "Latitude", "Longitude", "Administratives" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.IsExistsRequest), global::You.Facade.Proxies.v1.IsExistsRequest.Parser, new[]{ "Login" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.QueryReplaceProfileRequest), global::You.Facade.Proxies.v1.QueryReplaceProfileRequest.Parser, new[]{ "ClientType", "PublicInfo", "PrivateInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PublicInfo), global::You.Facade.Proxies.v1.PublicInfo.Parser, new[]{ "PersonalInfo", "Interests", "YouSocialSetting", "GeoInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PrivateInfo), global::You.Facade.Proxies.v1.PrivateInfo.Parser, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PersonalInfo), global::You.Facade.Proxies.v1.PersonalInfo.Parser, new[]{ "Login", "Gender", "Language", "Parental", "Marriage", "DateOfBirth", "HasLastName", "HasFirstName", "ProfileStrengthInPercent", "InterestStrengthInPercent", "KycStrengthInPercent", "TotalStrengthInPercent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.GeoInfo), global::You.Facade.Proxies.v1.GeoInfo.Parser, new[]{ "Latitude", "Longitude", "Administratives" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Administrative), global::You.Facade.Proxies.v1.Administrative.Parser, new[]{ "AdminLevel", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YouSocialSetting), global::You.Facade.Proxies.v1.YouSocialSetting.Parser, new[]{ "IsReadyToChat", "IsFirstNameShared", "IsLastNameShared", "IsAddressShared", "IsGenderShared", "IsLanguageShared", "IsParentalShared", "IsMarriageShared", "IsDayOfBirthShared", "SharedInterestIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.Interest), global::You.Facade.Proxies.v1.Interest.Parser, new[]{ "Id", "CategoryId", "GroupId", "ParentId", "IsPrimary", "IsNegative", "LastUpdated" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ObjectionableContentRequest), global::You.Facade.Proxies.v1.ObjectionableContentRequest.Parser, new[]{ "AdId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdministrativeRequest), global::You.Facade.Proxies.v1.AdministrativeRequest.Parser, new[]{ "AdminLevel", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.BalanceRequest), global::You.Facade.Proxies.v1.BalanceRequest.Parser, new[]{ "Currency" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PeerTxResponses), global::You.Facade.Proxies.v1.PeerTxResponses.Parser, new[]{ "TotalCount", "Txs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PeerTxResponse), global::You.Facade.Proxies.v1.PeerTxResponse.Parser, new[]{ "Status", "TrxId", "Amount", "Fee", "Start", "Stop", "Description", "Type", "CreatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.MetricResponse), global::You.Facade.Proxies.v1.MetricResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.IsExistsResponse), global::You.Facade.Proxies.v1.IsExistsResponse.Parser, new[]{ "IsExists" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ProfileCostResponse), global::You.Facade.Proxies.v1.ProfileCostResponse.Parser, new[]{ "ProfileCost", "InterestsCost", "KycCost", "TotalCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.GetProfileResponse), global::You.Facade.Proxies.v1.GetProfileResponse.Parser, new[]{ "PublicInfo", "PrivateInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.InterestResponse), global::You.Facade.Proxies.v1.InterestResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdHistoryResponses), global::You.Facade.Proxies.v1.AdHistoryResponses.Parser, new[]{ "AdHistory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdHistoryResponse), global::You.Facade.Proxies.v1.AdHistoryResponse.Parser, new[]{ "AdId", "ActionType", "BtnTxtString", "IsBtnExists", "IsImage", "Length", "ActionUrl", "VideoUrl", "CoverImageUrl", "CampaignId", "Cost", "DescriptionPrimary", "DescriptionPrimaryBold", "DescriptionSecondary", "LogoUrl", "ExpiredAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdResponses), global::You.Facade.Proxies.v1.AdResponses.Parser, new[]{ "Ads" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.AdResponse), global::You.Facade.Proxies.v1.AdResponse.Parser, new[]{ "AdId", "ActionType", "BtnTxtString", "IsBtnExists", "Length", "ActionUrl", "VideoUrl", "CoverImageUrl", "CampaignId", "Cost", "DescriptionPrimary", "DescriptionPrimaryBold", "DescriptionSecondary", "LogoUrl", "ExpiredAt", "IsImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YwRematchingResponse), global::You.Facade.Proxies.v1.YwRematchingResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YsRematchingResponse), global::You.Facade.Proxies.v1.YsRematchingResponse.Parser, new[]{ "Profiles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YsMatchedProfile), global::You.Facade.Proxies.v1.YsMatchedProfile.Parser, new[]{ "Login", "GenderLocalized", "MarriageLocalized", "ParentalLocalized", "LanguageLocalized", "IsReadyToChat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ObjectionableContentResponse), global::You.Facade.Proxies.v1.ObjectionableContentResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.BlockProfileResponse), global::You.Facade.Proxies.v1.BlockProfileResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.BalanceReceivedEvent), global::You.Facade.Proxies.v1.BalanceReceivedEvent.Parser, new[]{ "Available", "Frozen", "Currency" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.PerkLockedEvent), global::You.Facade.Proxies.v1.PerkLockedEvent.Parser, new[]{ "BasketId", "PerkId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgBasketChangedEvent), global::You.Facade.Proxies.v1.YgBasketChangedEvent.Parser, new[]{ "YgBasketVisibilities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent), global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent.Parser, new[]{ "BasketId", "IsBasketVisible" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::You.Facade.Proxies.v1.ProfileReplacedEvent), global::You.Facade.Proxies.v1.ProfileReplacedEvent.Parser, new[]{ "SenderClientType", "PublicInfo", "PrivateInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResponseStatus {
    [pbr::OriginalName("EMPTY")] Empty = 0,
    [pbr::OriginalName("SUCCESS")] Success = 1,
    [pbr::OriginalName("FAILED")] Failed = 2,
    [pbr::OriginalName("YOU_WATCH_SERVICE_OBJECTIONABLE_CONTENT_STATUS_NOT_FOUND")] YouWatchServiceObjectionableContentStatusNotFound = 3,
    [pbr::OriginalName("TRANSACTION_COMPLETED")] TransactionCompleted = 4,
    [pbr::OriginalName("TRANSACTION_INPROGRESS")] TransactionInprogress = 5,
    [pbr::OriginalName("TRANSACTION_PREPARETOPAY")] TransactionPreparetopay = 6,
    [pbr::OriginalName("TRANSACTION_CREATED")] TransactionCreated = 7,
    [pbr::OriginalName("USER_CONNECTION_NOT_FOUND")] UserConnectionNotFound = 8,
    [pbr::OriginalName("USER_CONNECTION_ALREADY_EXISTS")] UserConnectionAlreadyExists = 9,
    [pbr::OriginalName("USER_PROFILE_NOT_FOUND")] UserProfileNotFound = 10,
  }

  public enum OperationType {
    [pbr::OriginalName("DEPOSIT")] Deposit = 0,
    [pbr::OriginalName("TRANSFER")] Transfer = 1,
    [pbr::OriginalName("WITHDRAWAL")] Withdrawal = 2,
  }

  public enum YgBasketType {
    [pbr::OriginalName("PERKS")] Perks = 0,
    [pbr::OriginalName("CASH")] Cash = 1,
    [pbr::OriginalName("AD")] Ad = 2,
    [pbr::OriginalName("NFT")] Nft = 3,
    [pbr::OriginalName("LIKE")] Like = 4,
  }

  public enum YgGeoZoneTypes {
    [pbr::OriginalName("UNKNOWN_GEO_ZONE")] UnknownGeoZone = 0,
    [pbr::OriginalName("CIRCLE")] Circle = 1,
    [pbr::OriginalName("POLYGON")] Polygon = 2,
    [pbr::OriginalName("RECTANGLE")] Rectangle = 3,
  }

  public enum Currency {
    [pbr::OriginalName("EUR")] Eur = 0,
    [pbr::OriginalName("YOUC")] Youc = 1,
    [pbr::OriginalName("ETH")] Eth = 2,
    [pbr::OriginalName("RUB")] Rub = 3,
    [pbr::OriginalName("USD")] Usd = 4,
  }

  public enum LanguageCode {
    [pbr::OriginalName("EN")] En = 0,
    [pbr::OriginalName("DE")] De = 1,
    [pbr::OriginalName("RU")] Ru = 2,
  }

  public enum ClientType {
    [pbr::OriginalName("Empty")] Empty = 0,
    [pbr::OriginalName("Mobile")] Mobile = 1,
    [pbr::OriginalName("Web")] Web = 2,
    [pbr::OriginalName("System")] System = 3,
  }

  #endregion

  #region Messages
  public sealed partial class HistoriesResponse : pb::IMessage<HistoriesResponse> {
    private static readonly pb::MessageParser<HistoriesResponse> _parser = new pb::MessageParser<HistoriesResponse>(() => new HistoriesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoriesResponse(HistoriesResponse other) : this() {
      status_ = other.status_;
      history_ = other.history_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoriesResponse Clone() {
      return new HistoriesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ResponseStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "history" field.</summary>
    public const int HistoryFieldNumber = 2;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.HistoryResponse> _repeated_history_codec
        = pb::FieldCodec.ForMessage(18, global::You.Facade.Proxies.v1.HistoryResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.HistoryResponse> history_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.HistoryResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.HistoryResponse> History {
      get { return history_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!history_.Equals(other.history_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= history_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      history_.WriteTo(output, _repeated_history_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += history_.CalculateSize(_repeated_history_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoriesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      history_.Add(other.history_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::You.Facade.Proxies.v1.ResponseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            history_.AddEntriesFrom(input, _repeated_history_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HistoryResponse : pb::IMessage<HistoryResponse> {
    private static readonly pb::MessageParser<HistoryResponse> _parser = new pb::MessageParser<HistoryResponse>(() => new HistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryResponse(HistoryResponse other) : this() {
      id_ = other.id_;
      peerId_ = other.peerId_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      title_ = other.title_;
      description_ = other.description_;
      iconUrl_ = other.iconUrl_;
      isCollected_ = other.isCollected_;
      isIssued_ = other.isIssued_;
      ttl_ = other.ttl_;
      campaignId_ = other.campaignId_;
      basketId_ = other.basketId_;
      createdAt_ = other.createdAt_;
      issuedAt_ = other.issuedAt_;
      isDroppable_ = other.isDroppable_;
      videoUrl_ = other.videoUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryResponse Clone() {
      return new HistoryResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 2;
    private ulong peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconUrl" field.</summary>
    public const int IconUrlFieldNumber = 7;
    private string iconUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCollected" field.</summary>
    public const int IsCollectedFieldNumber = 8;
    private bool isCollected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCollected {
      get { return isCollected_; }
      set {
        isCollected_ = value;
      }
    }

    /// <summary>Field number for the "isIssued" field.</summary>
    public const int IsIssuedFieldNumber = 9;
    private bool isIssued_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIssued {
      get { return isIssued_; }
      set {
        isIssued_ = value;
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 10;
    private string ttl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ttl {
      get { return ttl_; }
      set {
        ttl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 11;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "basketId" field.</summary>
    public const int BasketIdFieldNumber = 12;
    private ulong basketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasketId {
      get { return basketId_; }
      set {
        basketId_ = value;
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 13;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issuedAt" field.</summary>
    public const int IssuedAtFieldNumber = 14;
    private string issuedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IssuedAt {
      get { return issuedAt_; }
      set {
        issuedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isDroppable" field.</summary>
    public const int IsDroppableFieldNumber = 15;
    private bool isDroppable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDroppable {
      get { return isDroppable_; }
      set {
        isDroppable_ = value;
      }
    }

    /// <summary>Field number for the "videoUrl" field.</summary>
    public const int VideoUrlFieldNumber = 16;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PeerId != other.PeerId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (IconUrl != other.IconUrl) return false;
      if (IsCollected != other.IsCollected) return false;
      if (IsIssued != other.IsIssued) return false;
      if (Ttl != other.Ttl) return false;
      if (CampaignId != other.CampaignId) return false;
      if (BasketId != other.BasketId) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (IssuedAt != other.IssuedAt) return false;
      if (IsDroppable != other.IsDroppable) return false;
      if (VideoUrl != other.VideoUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (PeerId != 0UL) hash ^= PeerId.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      if (IsCollected != false) hash ^= IsCollected.GetHashCode();
      if (IsIssued != false) hash ^= IsIssued.GetHashCode();
      if (Ttl.Length != 0) hash ^= Ttl.GetHashCode();
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (BasketId != 0UL) hash ^= BasketId.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (IssuedAt.Length != 0) hash ^= IssuedAt.GetHashCode();
      if (IsDroppable != false) hash ^= IsDroppable.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (PeerId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PeerId);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Longitude);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IconUrl);
      }
      if (IsCollected != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsCollected);
      }
      if (IsIssued != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsIssued);
      }
      if (Ttl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Ttl);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(CampaignId);
      }
      if (BasketId != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(BasketId);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedAt);
      }
      if (IssuedAt.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(IssuedAt);
      }
      if (IsDroppable != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsDroppable);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(VideoUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (PeerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PeerId);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (IsCollected != false) {
        size += 1 + 1;
      }
      if (IsIssued != false) {
        size += 1 + 1;
      }
      if (Ttl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ttl);
      }
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (BasketId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasketId);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (IssuedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IssuedAt);
      }
      if (IsDroppable != false) {
        size += 1 + 1;
      }
      if (VideoUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.PeerId != 0UL) {
        PeerId = other.PeerId;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      if (other.IsCollected != false) {
        IsCollected = other.IsCollected;
      }
      if (other.IsIssued != false) {
        IsIssued = other.IsIssued;
      }
      if (other.Ttl.Length != 0) {
        Ttl = other.Ttl;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.BasketId != 0UL) {
        BasketId = other.BasketId;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.IssuedAt.Length != 0) {
        IssuedAt = other.IssuedAt;
      }
      if (other.IsDroppable != false) {
        IsDroppable = other.IsDroppable;
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            PeerId = input.ReadUInt64();
            break;
          }
          case 25: {
            Latitude = input.ReadDouble();
            break;
          }
          case 33: {
            Longitude = input.ReadDouble();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            IconUrl = input.ReadString();
            break;
          }
          case 64: {
            IsCollected = input.ReadBool();
            break;
          }
          case 72: {
            IsIssued = input.ReadBool();
            break;
          }
          case 82: {
            Ttl = input.ReadString();
            break;
          }
          case 88: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 96: {
            BasketId = input.ReadUInt64();
            break;
          }
          case 106: {
            CreatedAt = input.ReadString();
            break;
          }
          case 114: {
            IssuedAt = input.ReadString();
            break;
          }
          case 120: {
            IsDroppable = input.ReadBool();
            break;
          }
          case 130: {
            VideoUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrizeRequest : pb::IMessage<PrizeRequest> {
    private static readonly pb::MessageParser<PrizeRequest> _parser = new pb::MessageParser<PrizeRequest>(() => new PrizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeRequest(PrizeRequest other) : this() {
      perkId_ = other.perkId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeRequest Clone() {
      return new PrizeRequest(this);
    }

    /// <summary>Field number for the "perkId" field.</summary>
    public const int PerkIdFieldNumber = 1;
    private ulong perkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PerkId {
      get { return perkId_; }
      set {
        perkId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerkId != other.PerkId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerkId != 0UL) hash ^= PerkId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerkId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PerkId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerkId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PerkId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.PerkId != 0UL) {
        PerkId = other.PerkId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PerkId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LockPrizeReply : pb::IMessage<LockPrizeReply> {
    private static readonly pb::MessageParser<LockPrizeReply> _parser = new pb::MessageParser<LockPrizeReply>(() => new LockPrizeReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LockPrizeReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockPrizeReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockPrizeReply(LockPrizeReply other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockPrizeReply Clone() {
      return new LockPrizeReply(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ResponseStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LockPrizeReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LockPrizeReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LockPrizeReply other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::You.Facade.Proxies.v1.ResponseStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrizeByBasketRequest : pb::IMessage<PrizeByBasketRequest> {
    private static readonly pb::MessageParser<PrizeByBasketRequest> _parser = new pb::MessageParser<PrizeByBasketRequest>(() => new PrizeByBasketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrizeByBasketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketRequest(PrizeByBasketRequest other) : this() {
      basketId_ = other.basketId_;
      basketType_ = other.basketType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketRequest Clone() {
      return new PrizeByBasketRequest(this);
    }

    /// <summary>Field number for the "basketId" field.</summary>
    public const int BasketIdFieldNumber = 1;
    private ulong basketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasketId {
      get { return basketId_; }
      set {
        basketId_ = value;
      }
    }

    /// <summary>Field number for the "basketType" field.</summary>
    public const int BasketTypeFieldNumber = 2;
    private global::You.Facade.Proxies.v1.YgBasketType basketType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgBasketType BasketType {
      get { return basketType_; }
      set {
        basketType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrizeByBasketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrizeByBasketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasketId != other.BasketId) return false;
      if (BasketType != other.BasketType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasketId != 0UL) hash ^= BasketId.GetHashCode();
      if (BasketType != 0) hash ^= BasketType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasketId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasketId);
      }
      if (BasketType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BasketType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasketId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasketId);
      }
      if (BasketType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BasketType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrizeByBasketRequest other) {
      if (other == null) {
        return;
      }
      if (other.BasketId != 0UL) {
        BasketId = other.BasketId;
      }
      if (other.BasketType != 0) {
        BasketType = other.BasketType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasketId = input.ReadUInt64();
            break;
          }
          case 16: {
            BasketType = (global::You.Facade.Proxies.v1.YgBasketType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrizesByBasketResponse : pb::IMessage<PrizesByBasketResponse> {
    private static readonly pb::MessageParser<PrizesByBasketResponse> _parser = new pb::MessageParser<PrizesByBasketResponse>(() => new PrizesByBasketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrizesByBasketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizesByBasketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizesByBasketResponse(PrizesByBasketResponse other) : this() {
      prizes_ = other.prizes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizesByBasketResponse Clone() {
      return new PrizesByBasketResponse(this);
    }

    /// <summary>Field number for the "prizes" field.</summary>
    public const int PrizesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.PrizeByBasketResponse> _repeated_prizes_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.PrizeByBasketResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.PrizeByBasketResponse> prizes_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.PrizeByBasketResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.PrizeByBasketResponse> Prizes {
      get { return prizes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrizesByBasketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrizesByBasketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!prizes_.Equals(other.prizes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= prizes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      prizes_.WriteTo(output, _repeated_prizes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += prizes_.CalculateSize(_repeated_prizes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrizesByBasketResponse other) {
      if (other == null) {
        return;
      }
      prizes_.Add(other.prizes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            prizes_.AddEntriesFrom(input, _repeated_prizes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrizeByBasketResponse : pb::IMessage<PrizeByBasketResponse> {
    private static readonly pb::MessageParser<PrizeByBasketResponse> _parser = new pb::MessageParser<PrizeByBasketResponse>(() => new PrizeByBasketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrizeByBasketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketResponse(PrizeByBasketResponse other) : this() {
      id_ = other.id_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      isDroppable_ = other.isDroppable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrizeByBasketResponse Clone() {
      return new PrizeByBasketResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 3;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "isDroppable" field.</summary>
    public const int IsDroppableFieldNumber = 4;
    private bool isDroppable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDroppable {
      get { return isDroppable_; }
      set {
        isDroppable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrizeByBasketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrizeByBasketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (IsDroppable != other.IsDroppable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (IsDroppable != false) hash ^= IsDroppable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Longitude);
      }
      if (IsDroppable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsDroppable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (IsDroppable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrizeByBasketResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.IsDroppable != false) {
        IsDroppable = other.IsDroppable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 17: {
            Latitude = input.ReadDouble();
            break;
          }
          case 25: {
            Longitude = input.ReadDouble();
            break;
          }
          case 32: {
            IsDroppable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeResponse : pb::IMessage<SubscribeResponse> {
    private static readonly pb::MessageParser<SubscribeResponse> _parser = new pb::MessageParser<SubscribeResponse>(() => new SubscribeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse(SubscribeResponse other) : this() {
      eventMessage_ = other.eventMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse Clone() {
      return new SubscribeResponse(this);
    }

    /// <summary>Field number for the "eventMessage" field.</summary>
    public const int EventMessageFieldNumber = 1;
    private string eventMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventMessage {
      get { return eventMessage_; }
      set {
        eventMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventMessage != other.EventMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventMessage.Length != 0) hash ^= EventMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventMessage.Length != 0) {
        EventMessage = other.EventMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationRequest : pb::IMessage<NotificationRequest> {
    private static readonly pb::MessageParser<NotificationRequest> _parser = new pb::MessageParser<NotificationRequest>(() => new NotificationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest(NotificationRequest other) : this() {
      clientType_ = other.clientType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest Clone() {
      return new NotificationRequest(this);
    }

    /// <summary>Field number for the "clientType" field.</summary>
    public const int ClientTypeFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ClientType clientType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ClientType ClientType {
      get { return clientType_; }
      set {
        clientType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientType != other.ClientType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientType != 0) hash ^= ClientType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientType != 0) {
        ClientType = other.ClientType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientType = (global::You.Facade.Proxies.v1.ClientType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgBasketRequest : pb::IMessage<YgBasketRequest> {
    private static readonly pb::MessageParser<YgBasketRequest> _parser = new pb::MessageParser<YgBasketRequest>(() => new YgBasketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgBasketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketRequest(YgBasketRequest other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketRequest Clone() {
      return new YgBasketRequest(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgBasketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgBasketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgBasketRequest other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgBasketResponse : pb::IMessage<YgBasketResponse> {
    private static readonly pb::MessageParser<YgBasketResponse> _parser = new pb::MessageParser<YgBasketResponse>(() => new YgBasketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgBasketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketResponse(YgBasketResponse other) : this() {
      baskets_ = other.baskets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketResponse Clone() {
      return new YgBasketResponse(this);
    }

    /// <summary>Field number for the "baskets" field.</summary>
    public const int BasketsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Basket> _repeated_baskets_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.Basket.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Basket> baskets_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Basket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Basket> Baskets {
      get { return baskets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgBasketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgBasketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!baskets_.Equals(other.baskets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= baskets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      baskets_.WriteTo(output, _repeated_baskets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += baskets_.CalculateSize(_repeated_baskets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgBasketResponse other) {
      if (other == null) {
        return;
      }
      baskets_.Add(other.baskets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            baskets_.AddEntriesFrom(input, _repeated_baskets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Basket : pb::IMessage<Basket> {
    private static readonly pb::MessageParser<Basket> _parser = new pb::MessageParser<Basket>(() => new Basket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Basket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basket(Basket other) : this() {
      basketId_ = other.basketId_;
      basketType_ = other.basketType_;
      basketGeoType_ = other.basketGeoType_;
      campaignId_ = other.campaignId_;
      title_ = other.title_;
      description_ = other.description_;
      iconUrl_ = other.iconUrl_;
      perkCost_ = other.perkCost_;
      maxPerksPerPeer_ = other.maxPerksPerPeer_;
      refCampaignIds_ = other.refCampaignIds_.Clone();
      switch (other.BasketGeoZoneCase) {
        case BasketGeoZoneOneofCase.Circle:
          Circle = other.Circle.Clone();
          break;
        case BasketGeoZoneOneofCase.Rectangle:
          Rectangle = other.Rectangle.Clone();
          break;
        case BasketGeoZoneOneofCase.Polygon:
          Polygon = other.Polygon.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basket Clone() {
      return new Basket(this);
    }

    /// <summary>Field number for the "basketId" field.</summary>
    public const int BasketIdFieldNumber = 1;
    private ulong basketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasketId {
      get { return basketId_; }
      set {
        basketId_ = value;
      }
    }

    /// <summary>Field number for the "basketType" field.</summary>
    public const int BasketTypeFieldNumber = 2;
    private global::You.Facade.Proxies.v1.YgBasketType basketType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgBasketType BasketType {
      get { return basketType_; }
      set {
        basketType_ = value;
      }
    }

    /// <summary>Field number for the "circle" field.</summary>
    public const int CircleFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgCircleResponse Circle {
      get { return basketGeoZoneCase_ == BasketGeoZoneOneofCase.Circle ? (global::You.Facade.Proxies.v1.YgCircleResponse) basketGeoZone_ : null; }
      set {
        basketGeoZone_ = value;
        basketGeoZoneCase_ = value == null ? BasketGeoZoneOneofCase.None : BasketGeoZoneOneofCase.Circle;
      }
    }

    /// <summary>Field number for the "rectangle" field.</summary>
    public const int RectangleFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgRectangleResponse Rectangle {
      get { return basketGeoZoneCase_ == BasketGeoZoneOneofCase.Rectangle ? (global::You.Facade.Proxies.v1.YgRectangleResponse) basketGeoZone_ : null; }
      set {
        basketGeoZone_ = value;
        basketGeoZoneCase_ = value == null ? BasketGeoZoneOneofCase.None : BasketGeoZoneOneofCase.Rectangle;
      }
    }

    /// <summary>Field number for the "polygon" field.</summary>
    public const int PolygonFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgRectangleResponse Polygon {
      get { return basketGeoZoneCase_ == BasketGeoZoneOneofCase.Polygon ? (global::You.Facade.Proxies.v1.YgRectangleResponse) basketGeoZone_ : null; }
      set {
        basketGeoZone_ = value;
        basketGeoZoneCase_ = value == null ? BasketGeoZoneOneofCase.None : BasketGeoZoneOneofCase.Polygon;
      }
    }

    /// <summary>Field number for the "basketGeoType" field.</summary>
    public const int BasketGeoTypeFieldNumber = 6;
    private global::You.Facade.Proxies.v1.YgGeoZoneTypes basketGeoType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgGeoZoneTypes BasketGeoType {
      get { return basketGeoType_; }
      set {
        basketGeoType_ = value;
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 7;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 8;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 9;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconUrl" field.</summary>
    public const int IconUrlFieldNumber = 10;
    private string iconUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerkCost" field.</summary>
    public const int PerkCostFieldNumber = 11;
    private double perkCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PerkCost {
      get { return perkCost_; }
      set {
        perkCost_ = value;
      }
    }

    /// <summary>Field number for the "maxPerksPerPeer" field.</summary>
    public const int MaxPerksPerPeerFieldNumber = 12;
    private uint maxPerksPerPeer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxPerksPerPeer {
      get { return maxPerksPerPeer_; }
      set {
        maxPerksPerPeer_ = value;
      }
    }

    /// <summary>Field number for the "refCampaignIds" field.</summary>
    public const int RefCampaignIdsFieldNumber = 13;
    private static readonly pb::FieldCodec<ulong> _repeated_refCampaignIds_codec
        = pb::FieldCodec.ForUInt64(106);
    private readonly pbc::RepeatedField<ulong> refCampaignIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> RefCampaignIds {
      get { return refCampaignIds_; }
    }

    private object basketGeoZone_;
    /// <summary>Enum of possible cases for the "basketGeoZone" oneof.</summary>
    public enum BasketGeoZoneOneofCase {
      None = 0,
      Circle = 3,
      Rectangle = 4,
      Polygon = 5,
    }
    private BasketGeoZoneOneofCase basketGeoZoneCase_ = BasketGeoZoneOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasketGeoZoneOneofCase BasketGeoZoneCase {
      get { return basketGeoZoneCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBasketGeoZone() {
      basketGeoZoneCase_ = BasketGeoZoneOneofCase.None;
      basketGeoZone_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Basket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Basket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasketId != other.BasketId) return false;
      if (BasketType != other.BasketType) return false;
      if (!object.Equals(Circle, other.Circle)) return false;
      if (!object.Equals(Rectangle, other.Rectangle)) return false;
      if (!object.Equals(Polygon, other.Polygon)) return false;
      if (BasketGeoType != other.BasketGeoType) return false;
      if (CampaignId != other.CampaignId) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (IconUrl != other.IconUrl) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PerkCost, other.PerkCost)) return false;
      if (MaxPerksPerPeer != other.MaxPerksPerPeer) return false;
      if(!refCampaignIds_.Equals(other.refCampaignIds_)) return false;
      if (BasketGeoZoneCase != other.BasketGeoZoneCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasketId != 0UL) hash ^= BasketId.GetHashCode();
      if (BasketType != 0) hash ^= BasketType.GetHashCode();
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Circle) hash ^= Circle.GetHashCode();
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Rectangle) hash ^= Rectangle.GetHashCode();
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Polygon) hash ^= Polygon.GetHashCode();
      if (BasketGeoType != 0) hash ^= BasketGeoType.GetHashCode();
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      if (PerkCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PerkCost);
      if (MaxPerksPerPeer != 0) hash ^= MaxPerksPerPeer.GetHashCode();
      hash ^= refCampaignIds_.GetHashCode();
      hash ^= (int) basketGeoZoneCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasketId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasketId);
      }
      if (BasketType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BasketType);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Circle) {
        output.WriteRawTag(26);
        output.WriteMessage(Circle);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Rectangle) {
        output.WriteRawTag(34);
        output.WriteMessage(Rectangle);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Polygon) {
        output.WriteRawTag(42);
        output.WriteMessage(Polygon);
      }
      if (BasketGeoType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BasketGeoType);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(CampaignId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Description);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IconUrl);
      }
      if (PerkCost != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(PerkCost);
      }
      if (MaxPerksPerPeer != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxPerksPerPeer);
      }
      refCampaignIds_.WriteTo(output, _repeated_refCampaignIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasketId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasketId);
      }
      if (BasketType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BasketType);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Circle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Circle);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Rectangle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rectangle);
      }
      if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Polygon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Polygon);
      }
      if (BasketGeoType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BasketGeoType);
      }
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (PerkCost != 0D) {
        size += 1 + 8;
      }
      if (MaxPerksPerPeer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPerksPerPeer);
      }
      size += refCampaignIds_.CalculateSize(_repeated_refCampaignIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Basket other) {
      if (other == null) {
        return;
      }
      if (other.BasketId != 0UL) {
        BasketId = other.BasketId;
      }
      if (other.BasketType != 0) {
        BasketType = other.BasketType;
      }
      if (other.BasketGeoType != 0) {
        BasketGeoType = other.BasketGeoType;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      if (other.PerkCost != 0D) {
        PerkCost = other.PerkCost;
      }
      if (other.MaxPerksPerPeer != 0) {
        MaxPerksPerPeer = other.MaxPerksPerPeer;
      }
      refCampaignIds_.Add(other.refCampaignIds_);
      switch (other.BasketGeoZoneCase) {
        case BasketGeoZoneOneofCase.Circle:
          if (Circle == null) {
            Circle = new global::You.Facade.Proxies.v1.YgCircleResponse();
          }
          Circle.MergeFrom(other.Circle);
          break;
        case BasketGeoZoneOneofCase.Rectangle:
          if (Rectangle == null) {
            Rectangle = new global::You.Facade.Proxies.v1.YgRectangleResponse();
          }
          Rectangle.MergeFrom(other.Rectangle);
          break;
        case BasketGeoZoneOneofCase.Polygon:
          if (Polygon == null) {
            Polygon = new global::You.Facade.Proxies.v1.YgRectangleResponse();
          }
          Polygon.MergeFrom(other.Polygon);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasketId = input.ReadUInt64();
            break;
          }
          case 16: {
            BasketType = (global::You.Facade.Proxies.v1.YgBasketType) input.ReadEnum();
            break;
          }
          case 26: {
            global::You.Facade.Proxies.v1.YgCircleResponse subBuilder = new global::You.Facade.Proxies.v1.YgCircleResponse();
            if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Circle) {
              subBuilder.MergeFrom(Circle);
            }
            input.ReadMessage(subBuilder);
            Circle = subBuilder;
            break;
          }
          case 34: {
            global::You.Facade.Proxies.v1.YgRectangleResponse subBuilder = new global::You.Facade.Proxies.v1.YgRectangleResponse();
            if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Rectangle) {
              subBuilder.MergeFrom(Rectangle);
            }
            input.ReadMessage(subBuilder);
            Rectangle = subBuilder;
            break;
          }
          case 42: {
            global::You.Facade.Proxies.v1.YgRectangleResponse subBuilder = new global::You.Facade.Proxies.v1.YgRectangleResponse();
            if (basketGeoZoneCase_ == BasketGeoZoneOneofCase.Polygon) {
              subBuilder.MergeFrom(Polygon);
            }
            input.ReadMessage(subBuilder);
            Polygon = subBuilder;
            break;
          }
          case 48: {
            BasketGeoType = (global::You.Facade.Proxies.v1.YgGeoZoneTypes) input.ReadEnum();
            break;
          }
          case 56: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 74: {
            Description = input.ReadString();
            break;
          }
          case 82: {
            IconUrl = input.ReadString();
            break;
          }
          case 89: {
            PerkCost = input.ReadDouble();
            break;
          }
          case 96: {
            MaxPerksPerPeer = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            refCampaignIds_.AddEntriesFrom(input, _repeated_refCampaignIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgCircleResponse : pb::IMessage<YgCircleResponse> {
    private static readonly pb::MessageParser<YgCircleResponse> _parser = new pb::MessageParser<YgCircleResponse>(() => new YgCircleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgCircleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgCircleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgCircleResponse(YgCircleResponse other) : this() {
      centerLatitude_ = other.centerLatitude_;
      centerLongitude_ = other.centerLongitude_;
      radius_ = other.radius_;
      radiusUnit_ = other.radiusUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgCircleResponse Clone() {
      return new YgCircleResponse(this);
    }

    /// <summary>Field number for the "centerLatitude" field.</summary>
    public const int CenterLatitudeFieldNumber = 1;
    private double centerLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CenterLatitude {
      get { return centerLatitude_; }
      set {
        centerLatitude_ = value;
      }
    }

    /// <summary>Field number for the "centerLongitude" field.</summary>
    public const int CenterLongitudeFieldNumber = 2;
    private double centerLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CenterLongitude {
      get { return centerLongitude_; }
      set {
        centerLongitude_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 3;
    private double radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }

    /// <summary>Field number for the "radiusUnit" field.</summary>
    public const int RadiusUnitFieldNumber = 4;
    private string radiusUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RadiusUnit {
      get { return radiusUnit_; }
      set {
        radiusUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgCircleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgCircleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CenterLatitude, other.CenterLatitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CenterLongitude, other.CenterLongitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (RadiusUnit != other.RadiusUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CenterLatitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CenterLatitude);
      if (CenterLongitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CenterLongitude);
      if (Radius != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Radius);
      if (RadiusUnit.Length != 0) hash ^= RadiusUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CenterLatitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(CenterLatitude);
      }
      if (CenterLongitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CenterLongitude);
      }
      if (Radius != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Radius);
      }
      if (RadiusUnit.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RadiusUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CenterLatitude != 0D) {
        size += 1 + 8;
      }
      if (CenterLongitude != 0D) {
        size += 1 + 8;
      }
      if (Radius != 0D) {
        size += 1 + 8;
      }
      if (RadiusUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RadiusUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgCircleResponse other) {
      if (other == null) {
        return;
      }
      if (other.CenterLatitude != 0D) {
        CenterLatitude = other.CenterLatitude;
      }
      if (other.CenterLongitude != 0D) {
        CenterLongitude = other.CenterLongitude;
      }
      if (other.Radius != 0D) {
        Radius = other.Radius;
      }
      if (other.RadiusUnit.Length != 0) {
        RadiusUnit = other.RadiusUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            CenterLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            CenterLongitude = input.ReadDouble();
            break;
          }
          case 25: {
            Radius = input.ReadDouble();
            break;
          }
          case 34: {
            RadiusUnit = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgRectangleResponse : pb::IMessage<YgRectangleResponse> {
    private static readonly pb::MessageParser<YgRectangleResponse> _parser = new pb::MessageParser<YgRectangleResponse>(() => new YgRectangleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgRectangleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgRectangleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgRectangleResponse(YgRectangleResponse other) : this() {
      latLngPoints_ = other.latLngPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgRectangleResponse Clone() {
      return new YgRectangleResponse(this);
    }

    /// <summary>Field number for the "latLngPoints" field.</summary>
    public const int LatLngPointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.YgLocationResponse> _repeated_latLngPoints_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.YgLocationResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.YgLocationResponse> latLngPoints_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.YgLocationResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.YgLocationResponse> LatLngPoints {
      get { return latLngPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgRectangleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgRectangleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!latLngPoints_.Equals(other.latLngPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= latLngPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      latLngPoints_.WriteTo(output, _repeated_latLngPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += latLngPoints_.CalculateSize(_repeated_latLngPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgRectangleResponse other) {
      if (other == null) {
        return;
      }
      latLngPoints_.Add(other.latLngPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            latLngPoints_.AddEntriesFrom(input, _repeated_latLngPoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgLocationResponse : pb::IMessage<YgLocationResponse> {
    private static readonly pb::MessageParser<YgLocationResponse> _parser = new pb::MessageParser<YgLocationResponse>(() => new YgLocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgLocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgLocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgLocationResponse(YgLocationResponse other) : this() {
      points_ = other.points_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgLocationResponse Clone() {
      return new YgLocationResponse(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_points_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> points_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Points {
      get { return points_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgLocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgLocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!points_.Equals(other.points_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= points_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      points_.WriteTo(output, _repeated_points_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += points_.CalculateSize(_repeated_points_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgLocationResponse other) {
      if (other == null) {
        return;
      }
      points_.Add(other.points_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetProfileRequest : pb::IMessage<GetProfileRequest> {
    private static readonly pb::MessageParser<GetProfileRequest> _parser = new pb::MessageParser<GetProfileRequest>(() => new GetProfileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProfileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileRequest(GetProfileRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileRequest Clone() {
      return new GetProfileRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProfileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProfileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProfileRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ProfileCostRequest : pb::IMessage<ProfileCostRequest> {
    private static readonly pb::MessageParser<ProfileCostRequest> _parser = new pb::MessageParser<ProfileCostRequest>(() => new ProfileCostRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileCostRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostRequest(ProfileCostRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostRequest Clone() {
      return new ProfileCostRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileCostRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileCostRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileCostRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class YwRematchingRequest : pb::IMessage<YwRematchingRequest> {
    private static readonly pb::MessageParser<YwRematchingRequest> _parser = new pb::MessageParser<YwRematchingRequest>(() => new YwRematchingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YwRematchingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingRequest(YwRematchingRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingRequest Clone() {
      return new YwRematchingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YwRematchingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YwRematchingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YwRematchingRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AdRequest : pb::IMessage<AdRequest> {
    private static readonly pb::MessageParser<AdRequest> _parser = new pb::MessageParser<AdRequest>(() => new AdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdRequest(AdRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdRequest Clone() {
      return new AdRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TopicRequest : pb::IMessage<TopicRequest> {
    private static readonly pb::MessageParser<TopicRequest> _parser = new pb::MessageParser<TopicRequest>(() => new TopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicRequest(TopicRequest other) : this() {
      priority_ = other.priority_;
      senderLogin_ = other.senderLogin_;
      receiverLogin_ = other.receiverLogin_;
      clientType_ = other.clientType_;
      switch (other.RequestCase) {
        case RequestOneofCase.ProfileInfoRequest:
          ProfileInfoRequest = other.ProfileInfoRequest.Clone();
          break;
        case RequestOneofCase.ChatRequest:
          ChatRequest = other.ChatRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicRequest Clone() {
      return new TopicRequest(this);
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 1;
    private global::You.Facade.Proxies.v1.TopicRequest.Types.Priority priority_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.TopicRequest.Types.Priority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "senderLogin" field.</summary>
    public const int SenderLoginFieldNumber = 2;
    private string senderLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderLogin {
      get { return senderLogin_; }
      set {
        senderLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiverLogin" field.</summary>
    public const int ReceiverLoginFieldNumber = 3;
    private string receiverLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverLogin {
      get { return receiverLogin_; }
      set {
        receiverLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientType" field.</summary>
    public const int ClientTypeFieldNumber = 4;
    private global::You.Facade.Proxies.v1.ClientType clientType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ClientType ClientType {
      get { return clientType_; }
      set {
        clientType_ = value;
      }
    }

    /// <summary>Field number for the "profileInfoRequest" field.</summary>
    public const int ProfileInfoRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ProfileInfoRequest ProfileInfoRequest {
      get { return requestCase_ == RequestOneofCase.ProfileInfoRequest ? (global::You.Facade.Proxies.v1.ProfileInfoRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ProfileInfoRequest;
      }
    }

    /// <summary>Field number for the "chatRequest" field.</summary>
    public const int ChatRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ChatRequest ChatRequest {
      get { return requestCase_ == RequestOneofCase.ChatRequest ? (global::You.Facade.Proxies.v1.ChatRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ChatRequest;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      ProfileInfoRequest = 5,
      ChatRequest = 6,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Priority != other.Priority) return false;
      if (SenderLogin != other.SenderLogin) return false;
      if (ReceiverLogin != other.ReceiverLogin) return false;
      if (ClientType != other.ClientType) return false;
      if (!object.Equals(ProfileInfoRequest, other.ProfileInfoRequest)) return false;
      if (!object.Equals(ChatRequest, other.ChatRequest)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (SenderLogin.Length != 0) hash ^= SenderLogin.GetHashCode();
      if (ReceiverLogin.Length != 0) hash ^= ReceiverLogin.GetHashCode();
      if (ClientType != 0) hash ^= ClientType.GetHashCode();
      if (requestCase_ == RequestOneofCase.ProfileInfoRequest) hash ^= ProfileInfoRequest.GetHashCode();
      if (requestCase_ == RequestOneofCase.ChatRequest) hash ^= ChatRequest.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Priority != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Priority);
      }
      if (SenderLogin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderLogin);
      }
      if (ReceiverLogin.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReceiverLogin);
      }
      if (ClientType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ClientType);
      }
      if (requestCase_ == RequestOneofCase.ProfileInfoRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(ProfileInfoRequest);
      }
      if (requestCase_ == RequestOneofCase.ChatRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(ChatRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
      }
      if (SenderLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderLogin);
      }
      if (ReceiverLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverLogin);
      }
      if (ClientType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
      }
      if (requestCase_ == RequestOneofCase.ProfileInfoRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileInfoRequest);
      }
      if (requestCase_ == RequestOneofCase.ChatRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.SenderLogin.Length != 0) {
        SenderLogin = other.SenderLogin;
      }
      if (other.ReceiverLogin.Length != 0) {
        ReceiverLogin = other.ReceiverLogin;
      }
      if (other.ClientType != 0) {
        ClientType = other.ClientType;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.ProfileInfoRequest:
          if (ProfileInfoRequest == null) {
            ProfileInfoRequest = new global::You.Facade.Proxies.v1.ProfileInfoRequest();
          }
          ProfileInfoRequest.MergeFrom(other.ProfileInfoRequest);
          break;
        case RequestOneofCase.ChatRequest:
          if (ChatRequest == null) {
            ChatRequest = new global::You.Facade.Proxies.v1.ChatRequest();
          }
          ChatRequest.MergeFrom(other.ChatRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Priority = (global::You.Facade.Proxies.v1.TopicRequest.Types.Priority) input.ReadEnum();
            break;
          }
          case 18: {
            SenderLogin = input.ReadString();
            break;
          }
          case 26: {
            ReceiverLogin = input.ReadString();
            break;
          }
          case 32: {
            ClientType = (global::You.Facade.Proxies.v1.ClientType) input.ReadEnum();
            break;
          }
          case 42: {
            global::You.Facade.Proxies.v1.ProfileInfoRequest subBuilder = new global::You.Facade.Proxies.v1.ProfileInfoRequest();
            if (requestCase_ == RequestOneofCase.ProfileInfoRequest) {
              subBuilder.MergeFrom(ProfileInfoRequest);
            }
            input.ReadMessage(subBuilder);
            ProfileInfoRequest = subBuilder;
            break;
          }
          case 50: {
            global::You.Facade.Proxies.v1.ChatRequest subBuilder = new global::You.Facade.Proxies.v1.ChatRequest();
            if (requestCase_ == RequestOneofCase.ChatRequest) {
              subBuilder.MergeFrom(ChatRequest);
            }
            input.ReadMessage(subBuilder);
            ChatRequest = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TopicRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Priority {
        [pbr::OriginalName("Low")] Low = 0,
        [pbr::OriginalName("Middle")] Middle = 1,
        [pbr::OriginalName("High")] High = 2,
      }

    }
    #endregion

  }

  public sealed partial class ProfileInfoRequest : pb::IMessage<ProfileInfoRequest> {
    private static readonly pb::MessageParser<ProfileInfoRequest> _parser = new pb::MessageParser<ProfileInfoRequest>(() => new ProfileInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileInfoRequest(ProfileInfoRequest other) : this() {
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileInfoRequest Clone() {
      return new ProfileInfoRequest(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRequest : pb::IMessage<ChatRequest> {
    private static readonly pb::MessageParser<ChatRequest> _parser = new pb::MessageParser<ChatRequest>(() => new ChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest(ChatRequest other) : this() {
      message_ = other.message_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest Clone() {
      return new ChatRequest(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationResponse : pb::IMessage<NotificationResponse> {
    private static readonly pb::MessageParser<NotificationResponse> _parser = new pb::MessageParser<NotificationResponse>(() => new NotificationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationResponse(NotificationResponse other) : this() {
      senderLogin_ = other.senderLogin_;
      receiverLogin_ = other.receiverLogin_;
      switch (other.ResponseCase) {
        case ResponseOneofCase.EventResponse:
          EventResponse = other.EventResponse.Clone();
          break;
        case ResponseOneofCase.ProfileResponse:
          ProfileResponse = other.ProfileResponse.Clone();
          break;
        case ResponseOneofCase.ChatResponse:
          ChatResponse = other.ChatResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationResponse Clone() {
      return new NotificationResponse(this);
    }

    /// <summary>Field number for the "senderLogin" field.</summary>
    public const int SenderLoginFieldNumber = 1;
    private string senderLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderLogin {
      get { return senderLogin_; }
      set {
        senderLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiverLogin" field.</summary>
    public const int ReceiverLoginFieldNumber = 2;
    private string receiverLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverLogin {
      get { return receiverLogin_; }
      set {
        receiverLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventResponse" field.</summary>
    public const int EventResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.EventResponse EventResponse {
      get { return responseCase_ == ResponseOneofCase.EventResponse ? (global::You.Facade.Proxies.v1.EventResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.EventResponse;
      }
    }

    /// <summary>Field number for the "profileResponse" field.</summary>
    public const int ProfileResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ProfileResponse ProfileResponse {
      get { return responseCase_ == ResponseOneofCase.ProfileResponse ? (global::You.Facade.Proxies.v1.ProfileResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.ProfileResponse;
      }
    }

    /// <summary>Field number for the "chatResponse" field.</summary>
    public const int ChatResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ChatResponse ChatResponse {
      get { return responseCase_ == ResponseOneofCase.ChatResponse ? (global::You.Facade.Proxies.v1.ChatResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.ChatResponse;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      EventResponse = 3,
      ProfileResponse = 4,
      ChatResponse = 5,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderLogin != other.SenderLogin) return false;
      if (ReceiverLogin != other.ReceiverLogin) return false;
      if (!object.Equals(EventResponse, other.EventResponse)) return false;
      if (!object.Equals(ProfileResponse, other.ProfileResponse)) return false;
      if (!object.Equals(ChatResponse, other.ChatResponse)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderLogin.Length != 0) hash ^= SenderLogin.GetHashCode();
      if (ReceiverLogin.Length != 0) hash ^= ReceiverLogin.GetHashCode();
      if (responseCase_ == ResponseOneofCase.EventResponse) hash ^= EventResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.ProfileResponse) hash ^= ProfileResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.ChatResponse) hash ^= ChatResponse.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SenderLogin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderLogin);
      }
      if (ReceiverLogin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReceiverLogin);
      }
      if (responseCase_ == ResponseOneofCase.EventResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(EventResponse);
      }
      if (responseCase_ == ResponseOneofCase.ProfileResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(ProfileResponse);
      }
      if (responseCase_ == ResponseOneofCase.ChatResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(ChatResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderLogin);
      }
      if (ReceiverLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverLogin);
      }
      if (responseCase_ == ResponseOneofCase.EventResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventResponse);
      }
      if (responseCase_ == ResponseOneofCase.ProfileResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileResponse);
      }
      if (responseCase_ == ResponseOneofCase.ChatResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.SenderLogin.Length != 0) {
        SenderLogin = other.SenderLogin;
      }
      if (other.ReceiverLogin.Length != 0) {
        ReceiverLogin = other.ReceiverLogin;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.EventResponse:
          if (EventResponse == null) {
            EventResponse = new global::You.Facade.Proxies.v1.EventResponse();
          }
          EventResponse.MergeFrom(other.EventResponse);
          break;
        case ResponseOneofCase.ProfileResponse:
          if (ProfileResponse == null) {
            ProfileResponse = new global::You.Facade.Proxies.v1.ProfileResponse();
          }
          ProfileResponse.MergeFrom(other.ProfileResponse);
          break;
        case ResponseOneofCase.ChatResponse:
          if (ChatResponse == null) {
            ChatResponse = new global::You.Facade.Proxies.v1.ChatResponse();
          }
          ChatResponse.MergeFrom(other.ChatResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderLogin = input.ReadString();
            break;
          }
          case 18: {
            ReceiverLogin = input.ReadString();
            break;
          }
          case 26: {
            global::You.Facade.Proxies.v1.EventResponse subBuilder = new global::You.Facade.Proxies.v1.EventResponse();
            if (responseCase_ == ResponseOneofCase.EventResponse) {
              subBuilder.MergeFrom(EventResponse);
            }
            input.ReadMessage(subBuilder);
            EventResponse = subBuilder;
            break;
          }
          case 34: {
            global::You.Facade.Proxies.v1.ProfileResponse subBuilder = new global::You.Facade.Proxies.v1.ProfileResponse();
            if (responseCase_ == ResponseOneofCase.ProfileResponse) {
              subBuilder.MergeFrom(ProfileResponse);
            }
            input.ReadMessage(subBuilder);
            ProfileResponse = subBuilder;
            break;
          }
          case 42: {
            global::You.Facade.Proxies.v1.ChatResponse subBuilder = new global::You.Facade.Proxies.v1.ChatResponse();
            if (responseCase_ == ResponseOneofCase.ChatResponse) {
              subBuilder.MergeFrom(ChatResponse);
            }
            input.ReadMessage(subBuilder);
            ChatResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventResponse : pb::IMessage<EventResponse> {
    private static readonly pb::MessageParser<EventResponse> _parser = new pb::MessageParser<EventResponse>(() => new EventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResponse(EventResponse other) : this() {
      switch (other.EventMessageCase) {
        case EventMessageOneofCase.BalanceReceivedEvent:
          BalanceReceivedEvent = other.BalanceReceivedEvent.Clone();
          break;
        case EventMessageOneofCase.ProfileReplacedEvent:
          ProfileReplacedEvent = other.ProfileReplacedEvent.Clone();
          break;
        case EventMessageOneofCase.PerkLockedEvent:
          PerkLockedEvent = other.PerkLockedEvent.Clone();
          break;
        case EventMessageOneofCase.YgBasketChangedEvent:
          YgBasketChangedEvent = other.YgBasketChangedEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResponse Clone() {
      return new EventResponse(this);
    }

    /// <summary>Field number for the "balanceReceivedEvent" field.</summary>
    public const int BalanceReceivedEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.BalanceReceivedEvent BalanceReceivedEvent {
      get { return eventMessageCase_ == EventMessageOneofCase.BalanceReceivedEvent ? (global::You.Facade.Proxies.v1.BalanceReceivedEvent) eventMessage_ : null; }
      set {
        eventMessage_ = value;
        eventMessageCase_ = value == null ? EventMessageOneofCase.None : EventMessageOneofCase.BalanceReceivedEvent;
      }
    }

    /// <summary>Field number for the "profileReplacedEvent" field.</summary>
    public const int ProfileReplacedEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ProfileReplacedEvent ProfileReplacedEvent {
      get { return eventMessageCase_ == EventMessageOneofCase.ProfileReplacedEvent ? (global::You.Facade.Proxies.v1.ProfileReplacedEvent) eventMessage_ : null; }
      set {
        eventMessage_ = value;
        eventMessageCase_ = value == null ? EventMessageOneofCase.None : EventMessageOneofCase.ProfileReplacedEvent;
      }
    }

    /// <summary>Field number for the "perkLockedEvent" field.</summary>
    public const int PerkLockedEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PerkLockedEvent PerkLockedEvent {
      get { return eventMessageCase_ == EventMessageOneofCase.PerkLockedEvent ? (global::You.Facade.Proxies.v1.PerkLockedEvent) eventMessage_ : null; }
      set {
        eventMessage_ = value;
        eventMessageCase_ = value == null ? EventMessageOneofCase.None : EventMessageOneofCase.PerkLockedEvent;
      }
    }

    /// <summary>Field number for the "ygBasketChangedEvent" field.</summary>
    public const int YgBasketChangedEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YgBasketChangedEvent YgBasketChangedEvent {
      get { return eventMessageCase_ == EventMessageOneofCase.YgBasketChangedEvent ? (global::You.Facade.Proxies.v1.YgBasketChangedEvent) eventMessage_ : null; }
      set {
        eventMessage_ = value;
        eventMessageCase_ = value == null ? EventMessageOneofCase.None : EventMessageOneofCase.YgBasketChangedEvent;
      }
    }

    private object eventMessage_;
    /// <summary>Enum of possible cases for the "eventMessage" oneof.</summary>
    public enum EventMessageOneofCase {
      None = 0,
      BalanceReceivedEvent = 1,
      ProfileReplacedEvent = 2,
      PerkLockedEvent = 3,
      YgBasketChangedEvent = 4,
    }
    private EventMessageOneofCase eventMessageCase_ = EventMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMessageOneofCase EventMessageCase {
      get { return eventMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEventMessage() {
      eventMessageCase_ = EventMessageOneofCase.None;
      eventMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BalanceReceivedEvent, other.BalanceReceivedEvent)) return false;
      if (!object.Equals(ProfileReplacedEvent, other.ProfileReplacedEvent)) return false;
      if (!object.Equals(PerkLockedEvent, other.PerkLockedEvent)) return false;
      if (!object.Equals(YgBasketChangedEvent, other.YgBasketChangedEvent)) return false;
      if (EventMessageCase != other.EventMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageCase_ == EventMessageOneofCase.BalanceReceivedEvent) hash ^= BalanceReceivedEvent.GetHashCode();
      if (eventMessageCase_ == EventMessageOneofCase.ProfileReplacedEvent) hash ^= ProfileReplacedEvent.GetHashCode();
      if (eventMessageCase_ == EventMessageOneofCase.PerkLockedEvent) hash ^= PerkLockedEvent.GetHashCode();
      if (eventMessageCase_ == EventMessageOneofCase.YgBasketChangedEvent) hash ^= YgBasketChangedEvent.GetHashCode();
      hash ^= (int) eventMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventMessageCase_ == EventMessageOneofCase.BalanceReceivedEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(BalanceReceivedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.ProfileReplacedEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(ProfileReplacedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.PerkLockedEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(PerkLockedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.YgBasketChangedEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(YgBasketChangedEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageCase_ == EventMessageOneofCase.BalanceReceivedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BalanceReceivedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.ProfileReplacedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileReplacedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.PerkLockedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PerkLockedEvent);
      }
      if (eventMessageCase_ == EventMessageOneofCase.YgBasketChangedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YgBasketChangedEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventResponse other) {
      if (other == null) {
        return;
      }
      switch (other.EventMessageCase) {
        case EventMessageOneofCase.BalanceReceivedEvent:
          if (BalanceReceivedEvent == null) {
            BalanceReceivedEvent = new global::You.Facade.Proxies.v1.BalanceReceivedEvent();
          }
          BalanceReceivedEvent.MergeFrom(other.BalanceReceivedEvent);
          break;
        case EventMessageOneofCase.ProfileReplacedEvent:
          if (ProfileReplacedEvent == null) {
            ProfileReplacedEvent = new global::You.Facade.Proxies.v1.ProfileReplacedEvent();
          }
          ProfileReplacedEvent.MergeFrom(other.ProfileReplacedEvent);
          break;
        case EventMessageOneofCase.PerkLockedEvent:
          if (PerkLockedEvent == null) {
            PerkLockedEvent = new global::You.Facade.Proxies.v1.PerkLockedEvent();
          }
          PerkLockedEvent.MergeFrom(other.PerkLockedEvent);
          break;
        case EventMessageOneofCase.YgBasketChangedEvent:
          if (YgBasketChangedEvent == null) {
            YgBasketChangedEvent = new global::You.Facade.Proxies.v1.YgBasketChangedEvent();
          }
          YgBasketChangedEvent.MergeFrom(other.YgBasketChangedEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::You.Facade.Proxies.v1.BalanceReceivedEvent subBuilder = new global::You.Facade.Proxies.v1.BalanceReceivedEvent();
            if (eventMessageCase_ == EventMessageOneofCase.BalanceReceivedEvent) {
              subBuilder.MergeFrom(BalanceReceivedEvent);
            }
            input.ReadMessage(subBuilder);
            BalanceReceivedEvent = subBuilder;
            break;
          }
          case 18: {
            global::You.Facade.Proxies.v1.ProfileReplacedEvent subBuilder = new global::You.Facade.Proxies.v1.ProfileReplacedEvent();
            if (eventMessageCase_ == EventMessageOneofCase.ProfileReplacedEvent) {
              subBuilder.MergeFrom(ProfileReplacedEvent);
            }
            input.ReadMessage(subBuilder);
            ProfileReplacedEvent = subBuilder;
            break;
          }
          case 26: {
            global::You.Facade.Proxies.v1.PerkLockedEvent subBuilder = new global::You.Facade.Proxies.v1.PerkLockedEvent();
            if (eventMessageCase_ == EventMessageOneofCase.PerkLockedEvent) {
              subBuilder.MergeFrom(PerkLockedEvent);
            }
            input.ReadMessage(subBuilder);
            PerkLockedEvent = subBuilder;
            break;
          }
          case 34: {
            global::You.Facade.Proxies.v1.YgBasketChangedEvent subBuilder = new global::You.Facade.Proxies.v1.YgBasketChangedEvent();
            if (eventMessageCase_ == EventMessageOneofCase.YgBasketChangedEvent) {
              subBuilder.MergeFrom(YgBasketChangedEvent);
            }
            input.ReadMessage(subBuilder);
            YgBasketChangedEvent = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProfileResponse : pb::IMessage<ProfileResponse> {
    private static readonly pb::MessageParser<ProfileResponse> _parser = new pb::MessageParser<ProfileResponse>(() => new ProfileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileResponse(ProfileResponse other) : this() {
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileResponse Clone() {
      return new ProfileResponse(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileResponse other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TopicResponse : pb::IMessage<TopicResponse> {
    private static readonly pb::MessageParser<TopicResponse> _parser = new pb::MessageParser<TopicResponse>(() => new TopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicResponse(TopicResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicResponse Clone() {
      return new TopicResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LocationResponse : pb::IMessage<LocationResponse> {
    private static readonly pb::MessageParser<LocationResponse> _parser = new pb::MessageParser<LocationResponse>(() => new LocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResponse(LocationResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResponse Clone() {
      return new LocationResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ChatResponse : pb::IMessage<ChatResponse> {
    private static readonly pb::MessageParser<ChatResponse> _parser = new pb::MessageParser<ChatResponse>(() => new ChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse(ChatResponse other) : this() {
      receiverLogin_ = other.receiverLogin_;
      message_ = other.message_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse Clone() {
      return new ChatResponse(this);
    }

    /// <summary>Field number for the "receiverLogin" field.</summary>
    public const int ReceiverLoginFieldNumber = 1;
    private string receiverLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverLogin {
      get { return receiverLogin_; }
      set {
        receiverLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverLogin != other.ReceiverLogin) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverLogin.Length != 0) hash ^= ReceiverLogin.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverLogin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReceiverLogin);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverLogin);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverLogin.Length != 0) {
        ReceiverLogin = other.ReceiverLogin;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReceiverLogin = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockProfileRequest : pb::IMessage<BlockProfileRequest> {
    private static readonly pb::MessageParser<BlockProfileRequest> _parser = new pb::MessageParser<BlockProfileRequest>(() => new BlockProfileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockProfileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileRequest(BlockProfileRequest other) : this() {
      blockedLogin_ = other.blockedLogin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileRequest Clone() {
      return new BlockProfileRequest(this);
    }

    /// <summary>Field number for the "blockedLogin" field.</summary>
    public const int BlockedLoginFieldNumber = 1;
    private string blockedLogin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BlockedLogin {
      get { return blockedLogin_; }
      set {
        blockedLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockProfileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockProfileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockedLogin != other.BlockedLogin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockedLogin.Length != 0) hash ^= BlockedLogin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockedLogin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BlockedLogin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockedLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockedLogin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockProfileRequest other) {
      if (other == null) {
        return;
      }
      if (other.BlockedLogin.Length != 0) {
        BlockedLogin = other.BlockedLogin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BlockedLogin = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CatalogsRequest : pb::IMessage<CatalogsRequest> {
    private static readonly pb::MessageParser<CatalogsRequest> _parser = new pb::MessageParser<CatalogsRequest>(() => new CatalogsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsRequest(CatalogsRequest other) : this() {
      languageCode_ = other.languageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsRequest Clone() {
      return new CatalogsRequest(this);
    }

    /// <summary>Field number for the "languageCode" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private global::You.Facade.Proxies.v1.LanguageCode languageCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.LanguageCode LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LanguageCode != other.LanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LanguageCode != 0) hash ^= LanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LanguageCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LanguageCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogsRequest other) {
      if (other == null) {
        return;
      }
      if (other.LanguageCode != 0) {
        LanguageCode = other.LanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LanguageCode = (global::You.Facade.Proxies.v1.LanguageCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CatalogsResponse : pb::IMessage<CatalogsResponse> {
    private static readonly pb::MessageParser<CatalogsResponse> _parser = new pb::MessageParser<CatalogsResponse>(() => new CatalogsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsResponse(CatalogsResponse other) : this() {
      catalog_ = other.catalog_ != null ? other.catalog_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogsResponse Clone() {
      return new CatalogsResponse(this);
    }

    /// <summary>Field number for the "catalog" field.</summary>
    public const int CatalogFieldNumber = 1;
    private global::You.Facade.Proxies.v1.Catalog catalog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.Catalog Catalog {
      get { return catalog_; }
      set {
        catalog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Catalog, other.Catalog)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (catalog_ != null) hash ^= Catalog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (catalog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Catalog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (catalog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Catalog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogsResponse other) {
      if (other == null) {
        return;
      }
      if (other.catalog_ != null) {
        if (catalog_ == null) {
          Catalog = new global::You.Facade.Proxies.v1.Catalog();
        }
        Catalog.MergeFrom(other.Catalog);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (catalog_ == null) {
              Catalog = new global::You.Facade.Proxies.v1.Catalog();
            }
            input.ReadMessage(Catalog);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Catalog : pb::IMessage<Catalog> {
    private static readonly pb::MessageParser<Catalog> _parser = new pb::MessageParser<Catalog>(() => new Catalog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Catalog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalog(Catalog other) : this() {
      parents_ = other.parents_.Clone();
      genders_ = other.genders_.Clone();
      languages_ = other.languages_.Clone();
      marriages_ = other.marriages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalog Clone() {
      return new Catalog(this);
    }

    /// <summary>Field number for the "parents" field.</summary>
    public const int ParentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Parent> _repeated_parents_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.Parent.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Parent> parents_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Parent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Parent> Parents {
      get { return parents_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Gender> _repeated_genders_codec
        = pb::FieldCodec.ForMessage(18, global::You.Facade.Proxies.v1.Gender.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Gender> genders_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Gender>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Gender> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Language> _repeated_languages_codec
        = pb::FieldCodec.ForMessage(26, global::You.Facade.Proxies.v1.Language.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Language> languages_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Language>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Language> Languages {
      get { return languages_; }
    }

    /// <summary>Field number for the "marriages" field.</summary>
    public const int MarriagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Marriage> _repeated_marriages_codec
        = pb::FieldCodec.ForMessage(34, global::You.Facade.Proxies.v1.Marriage.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Marriage> marriages_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Marriage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Marriage> Marriages {
      get { return marriages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Catalog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Catalog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parents_.Equals(other.parents_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!languages_.Equals(other.languages_)) return false;
      if(!marriages_.Equals(other.marriages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parents_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= languages_.GetHashCode();
      hash ^= marriages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      parents_.WriteTo(output, _repeated_parents_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      languages_.WriteTo(output, _repeated_languages_codec);
      marriages_.WriteTo(output, _repeated_marriages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parents_.CalculateSize(_repeated_parents_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += languages_.CalculateSize(_repeated_languages_codec);
      size += marriages_.CalculateSize(_repeated_marriages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Catalog other) {
      if (other == null) {
        return;
      }
      parents_.Add(other.parents_);
      genders_.Add(other.genders_);
      languages_.Add(other.languages_);
      marriages_.Add(other.marriages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parents_.AddEntriesFrom(input, _repeated_parents_codec);
            break;
          }
          case 18: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 26: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
          case 34: {
            marriages_.AddEntriesFrom(input, _repeated_marriages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Parent : pb::IMessage<Parent> {
    private static readonly pb::MessageParser<Parent> _parser = new pb::MessageParser<Parent>(() => new Parent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Parent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parent(Parent other) : this() {
      code_ = other.code_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parent Clone() {
      return new Parent(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Parent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Parent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Parent other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Gender : pb::IMessage<Gender> {
    private static readonly pb::MessageParser<Gender> _parser = new pb::MessageParser<Gender>(() => new Gender());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gender> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gender() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gender(Gender other) : this() {
      code_ = other.code_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gender Clone() {
      return new Gender(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gender);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gender other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gender other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Language : pb::IMessage<Language> {
    private static readonly pb::MessageParser<Language> _parser = new pb::MessageParser<Language>(() => new Language());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Language> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Language() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Language(Language other) : this() {
      code_ = other.code_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Language Clone() {
      return new Language(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Language);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Language other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Language other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Marriage : pb::IMessage<Marriage> {
    private static readonly pb::MessageParser<Marriage> _parser = new pb::MessageParser<Marriage>(() => new Marriage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Marriage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marriage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marriage(Marriage other) : this() {
      code_ = other.code_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marriage Clone() {
      return new Marriage(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Marriage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Marriage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Marriage other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YsRematchingRequest : pb::IMessage<YsRematchingRequest> {
    private static readonly pb::MessageParser<YsRematchingRequest> _parser = new pb::MessageParser<YsRematchingRequest>(() => new YsRematchingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YsRematchingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingRequest(YsRematchingRequest other) : this() {
      limit_ = other.limit_;
      offset_ = other.offset_;
      minAge_ = other.minAge_ != null ? other.minAge_.Clone() : null;
      maxAge_ = other.maxAge_ != null ? other.maxAge_.Clone() : null;
      genders_ = other.genders_.Clone();
      marriages_ = other.marriages_.Clone();
      parents_ = other.parents_.Clone();
      languages_ = other.languages_.Clone();
      interests_ = other.interests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingRequest Clone() {
      return new YsRematchingRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "minAge" field.</summary>
    public const int MinAgeFieldNumber = 3;
    private global::You.Facade.Proxies.v1.NullableUInt32 minAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableUInt32 MinAge {
      get { return minAge_; }
      set {
        minAge_ = value;
      }
    }

    /// <summary>Field number for the "maxAge" field.</summary>
    public const int MaxAgeFieldNumber = 4;
    private global::You.Facade.Proxies.v1.NullableUInt32 maxAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableUInt32 MaxAge {
      get { return maxAge_; }
      set {
        maxAge_ = value;
      }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_genders_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> genders_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "marriages" field.</summary>
    public const int MarriagesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_marriages_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> marriages_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Marriages {
      get { return marriages_; }
    }

    /// <summary>Field number for the "parents" field.</summary>
    public const int ParentsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_parents_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> parents_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Parents {
      get { return parents_; }
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_languages_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> languages_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Languages {
      get { return languages_; }
    }

    /// <summary>Field number for the "Interests" field.</summary>
    public const int InterestsFieldNumber = 9;
    private static readonly pb::FieldCodec<ulong> _repeated_interests_codec
        = pb::FieldCodec.ForUInt64(74);
    private readonly pbc::RepeatedField<ulong> interests_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Interests {
      get { return interests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YsRematchingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YsRematchingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      if (!object.Equals(MinAge, other.MinAge)) return false;
      if (!object.Equals(MaxAge, other.MaxAge)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!marriages_.Equals(other.marriages_)) return false;
      if(!parents_.Equals(other.parents_)) return false;
      if(!languages_.Equals(other.languages_)) return false;
      if(!interests_.Equals(other.interests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (minAge_ != null) hash ^= MinAge.GetHashCode();
      if (maxAge_ != null) hash ^= MaxAge.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= marriages_.GetHashCode();
      hash ^= parents_.GetHashCode();
      hash ^= languages_.GetHashCode();
      hash ^= interests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (minAge_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinAge);
      }
      if (maxAge_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaxAge);
      }
      genders_.WriteTo(output, _repeated_genders_codec);
      marriages_.WriteTo(output, _repeated_marriages_codec);
      parents_.WriteTo(output, _repeated_parents_codec);
      languages_.WriteTo(output, _repeated_languages_codec);
      interests_.WriteTo(output, _repeated_interests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (minAge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinAge);
      }
      if (maxAge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxAge);
      }
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += marriages_.CalculateSize(_repeated_marriages_codec);
      size += parents_.CalculateSize(_repeated_parents_codec);
      size += languages_.CalculateSize(_repeated_languages_codec);
      size += interests_.CalculateSize(_repeated_interests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YsRematchingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.minAge_ != null) {
        if (minAge_ == null) {
          MinAge = new global::You.Facade.Proxies.v1.NullableUInt32();
        }
        MinAge.MergeFrom(other.MinAge);
      }
      if (other.maxAge_ != null) {
        if (maxAge_ == null) {
          MaxAge = new global::You.Facade.Proxies.v1.NullableUInt32();
        }
        MaxAge.MergeFrom(other.MaxAge);
      }
      genders_.Add(other.genders_);
      marriages_.Add(other.marriages_);
      parents_.Add(other.parents_);
      languages_.Add(other.languages_);
      interests_.Add(other.interests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 26: {
            if (minAge_ == null) {
              MinAge = new global::You.Facade.Proxies.v1.NullableUInt32();
            }
            input.ReadMessage(MinAge);
            break;
          }
          case 34: {
            if (maxAge_ == null) {
              MaxAge = new global::You.Facade.Proxies.v1.NullableUInt32();
            }
            input.ReadMessage(MaxAge);
            break;
          }
          case 42: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 50: {
            marriages_.AddEntriesFrom(input, _repeated_marriages_codec);
            break;
          }
          case 58: {
            parents_.AddEntriesFrom(input, _repeated_parents_codec);
            break;
          }
          case 66: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
          case 74:
          case 72: {
            interests_.AddEntriesFrom(input, _repeated_interests_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MetricRequest : pb::IMessage<MetricRequest> {
    private static readonly pb::MessageParser<MetricRequest> _parser = new pb::MessageParser<MetricRequest>(() => new MetricRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricRequest(MetricRequest other) : this() {
      campaignId_ = other.campaignId_;
      adId_ = other.adId_;
      watchedAdTrxIdsToConfirm_ = other.watchedAdTrxIdsToConfirm_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricRequest Clone() {
      return new MetricRequest(this);
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 1;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "adId" field.</summary>
    public const int AdIdFieldNumber = 2;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    /// <summary>Field number for the "watchedAdTrxIdsToConfirm" field.</summary>
    public const int WatchedAdTrxIdsToConfirmFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_watchedAdTrxIdsToConfirm_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> watchedAdTrxIdsToConfirm_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> WatchedAdTrxIdsToConfirm {
      get { return watchedAdTrxIdsToConfirm_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CampaignId != other.CampaignId) return false;
      if (AdId != other.AdId) return false;
      if(!watchedAdTrxIdsToConfirm_.Equals(other.watchedAdTrxIdsToConfirm_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      hash ^= watchedAdTrxIdsToConfirm_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CampaignId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(CampaignId);
      }
      if (AdId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(AdId);
      }
      watchedAdTrxIdsToConfirm_.WriteTo(output, _repeated_watchedAdTrxIdsToConfirm_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      size += watchedAdTrxIdsToConfirm_.CalculateSize(_repeated_watchedAdTrxIdsToConfirm_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricRequest other) {
      if (other == null) {
        return;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      watchedAdTrxIdsToConfirm_.Add(other.watchedAdTrxIdsToConfirm_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 16: {
            AdId = input.ReadUInt64();
            break;
          }
          case 26:
          case 24: {
            watchedAdTrxIdsToConfirm_.AddEntriesFrom(input, _repeated_watchedAdTrxIdsToConfirm_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationRequest : pb::IMessage<LocationRequest> {
    private static readonly pb::MessageParser<LocationRequest> _parser = new pb::MessageParser<LocationRequest>(() => new LocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationRequest(LocationRequest other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      administratives_ = other.administratives_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationRequest Clone() {
      return new LocationRequest(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "administratives" field.</summary>
    public const int AdministrativesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.AdministrativeRequest> _repeated_administratives_codec
        = pb::FieldCodec.ForMessage(26, global::You.Facade.Proxies.v1.AdministrativeRequest.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.AdministrativeRequest> administratives_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.AdministrativeRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.AdministrativeRequest> Administratives {
      get { return administratives_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if(!administratives_.Equals(other.administratives_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      hash ^= administratives_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      administratives_.WriteTo(output, _repeated_administratives_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      size += administratives_.CalculateSize(_repeated_administratives_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      administratives_.Add(other.administratives_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 26: {
            administratives_.AddEntriesFrom(input, _repeated_administratives_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsExistsRequest : pb::IMessage<IsExistsRequest> {
    private static readonly pb::MessageParser<IsExistsRequest> _parser = new pb::MessageParser<IsExistsRequest>(() => new IsExistsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsExistsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsRequest(IsExistsRequest other) : this() {
      login_ = other.login_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsRequest Clone() {
      return new IsExistsRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsExistsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsExistsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsExistsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryReplaceProfileRequest : pb::IMessage<QueryReplaceProfileRequest> {
    private static readonly pb::MessageParser<QueryReplaceProfileRequest> _parser = new pb::MessageParser<QueryReplaceProfileRequest>(() => new QueryReplaceProfileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryReplaceProfileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryReplaceProfileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryReplaceProfileRequest(QueryReplaceProfileRequest other) : this() {
      clientType_ = other.clientType_;
      publicInfo_ = other.publicInfo_ != null ? other.publicInfo_.Clone() : null;
      privateInfo_ = other.privateInfo_ != null ? other.privateInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryReplaceProfileRequest Clone() {
      return new QueryReplaceProfileRequest(this);
    }

    /// <summary>Field number for the "clientType" field.</summary>
    public const int ClientTypeFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ClientType clientType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ClientType ClientType {
      get { return clientType_; }
      set {
        clientType_ = value;
      }
    }

    /// <summary>Field number for the "publicInfo" field.</summary>
    public const int PublicInfoFieldNumber = 2;
    private global::You.Facade.Proxies.v1.PublicInfo publicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PublicInfo PublicInfo {
      get { return publicInfo_; }
      set {
        publicInfo_ = value;
      }
    }

    /// <summary>Field number for the "privateInfo" field.</summary>
    public const int PrivateInfoFieldNumber = 3;
    private global::You.Facade.Proxies.v1.PrivateInfo privateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PrivateInfo PrivateInfo {
      get { return privateInfo_; }
      set {
        privateInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryReplaceProfileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryReplaceProfileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientType != other.ClientType) return false;
      if (!object.Equals(PublicInfo, other.PublicInfo)) return false;
      if (!object.Equals(PrivateInfo, other.PrivateInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientType != 0) hash ^= ClientType.GetHashCode();
      if (publicInfo_ != null) hash ^= PublicInfo.GetHashCode();
      if (privateInfo_ != null) hash ^= PrivateInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ClientType);
      }
      if (publicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicInfo);
      }
      if (privateInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PrivateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
      }
      if (publicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicInfo);
      }
      if (privateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryReplaceProfileRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientType != 0) {
        ClientType = other.ClientType;
      }
      if (other.publicInfo_ != null) {
        if (publicInfo_ == null) {
          PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
        }
        PublicInfo.MergeFrom(other.PublicInfo);
      }
      if (other.privateInfo_ != null) {
        if (privateInfo_ == null) {
          PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
        }
        PrivateInfo.MergeFrom(other.PrivateInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientType = (global::You.Facade.Proxies.v1.ClientType) input.ReadEnum();
            break;
          }
          case 18: {
            if (publicInfo_ == null) {
              PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
            }
            input.ReadMessage(PublicInfo);
            break;
          }
          case 26: {
            if (privateInfo_ == null) {
              PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
            }
            input.ReadMessage(PrivateInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PublicInfo : pb::IMessage<PublicInfo> {
    private static readonly pb::MessageParser<PublicInfo> _parser = new pb::MessageParser<PublicInfo>(() => new PublicInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicInfo(PublicInfo other) : this() {
      personalInfo_ = other.personalInfo_ != null ? other.personalInfo_.Clone() : null;
      interests_ = other.interests_.Clone();
      youSocialSetting_ = other.youSocialSetting_ != null ? other.youSocialSetting_.Clone() : null;
      geoInfo_ = other.geoInfo_ != null ? other.geoInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicInfo Clone() {
      return new PublicInfo(this);
    }

    /// <summary>Field number for the "personalInfo" field.</summary>
    public const int PersonalInfoFieldNumber = 1;
    private global::You.Facade.Proxies.v1.PersonalInfo personalInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PersonalInfo PersonalInfo {
      get { return personalInfo_; }
      set {
        personalInfo_ = value;
      }
    }

    /// <summary>Field number for the "interests" field.</summary>
    public const int InterestsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Interest> _repeated_interests_codec
        = pb::FieldCodec.ForMessage(18, global::You.Facade.Proxies.v1.Interest.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Interest> interests_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Interest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Interest> Interests {
      get { return interests_; }
    }

    /// <summary>Field number for the "youSocialSetting" field.</summary>
    public const int YouSocialSettingFieldNumber = 3;
    private global::You.Facade.Proxies.v1.YouSocialSetting youSocialSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.YouSocialSetting YouSocialSetting {
      get { return youSocialSetting_; }
      set {
        youSocialSetting_ = value;
      }
    }

    /// <summary>Field number for the "geoInfo" field.</summary>
    public const int GeoInfoFieldNumber = 4;
    private global::You.Facade.Proxies.v1.GeoInfo geoInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.GeoInfo GeoInfo {
      get { return geoInfo_; }
      set {
        geoInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PersonalInfo, other.PersonalInfo)) return false;
      if(!interests_.Equals(other.interests_)) return false;
      if (!object.Equals(YouSocialSetting, other.YouSocialSetting)) return false;
      if (!object.Equals(GeoInfo, other.GeoInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (personalInfo_ != null) hash ^= PersonalInfo.GetHashCode();
      hash ^= interests_.GetHashCode();
      if (youSocialSetting_ != null) hash ^= YouSocialSetting.GetHashCode();
      if (geoInfo_ != null) hash ^= GeoInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (personalInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PersonalInfo);
      }
      interests_.WriteTo(output, _repeated_interests_codec);
      if (youSocialSetting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YouSocialSetting);
      }
      if (geoInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GeoInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (personalInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PersonalInfo);
      }
      size += interests_.CalculateSize(_repeated_interests_codec);
      if (youSocialSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YouSocialSetting);
      }
      if (geoInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicInfo other) {
      if (other == null) {
        return;
      }
      if (other.personalInfo_ != null) {
        if (personalInfo_ == null) {
          PersonalInfo = new global::You.Facade.Proxies.v1.PersonalInfo();
        }
        PersonalInfo.MergeFrom(other.PersonalInfo);
      }
      interests_.Add(other.interests_);
      if (other.youSocialSetting_ != null) {
        if (youSocialSetting_ == null) {
          YouSocialSetting = new global::You.Facade.Proxies.v1.YouSocialSetting();
        }
        YouSocialSetting.MergeFrom(other.YouSocialSetting);
      }
      if (other.geoInfo_ != null) {
        if (geoInfo_ == null) {
          GeoInfo = new global::You.Facade.Proxies.v1.GeoInfo();
        }
        GeoInfo.MergeFrom(other.GeoInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (personalInfo_ == null) {
              PersonalInfo = new global::You.Facade.Proxies.v1.PersonalInfo();
            }
            input.ReadMessage(PersonalInfo);
            break;
          }
          case 18: {
            interests_.AddEntriesFrom(input, _repeated_interests_codec);
            break;
          }
          case 26: {
            if (youSocialSetting_ == null) {
              YouSocialSetting = new global::You.Facade.Proxies.v1.YouSocialSetting();
            }
            input.ReadMessage(YouSocialSetting);
            break;
          }
          case 34: {
            if (geoInfo_ == null) {
              GeoInfo = new global::You.Facade.Proxies.v1.GeoInfo();
            }
            input.ReadMessage(GeoInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivateInfo : pb::IMessage<PrivateInfo> {
    private static readonly pb::MessageParser<PrivateInfo> _parser = new pb::MessageParser<PrivateInfo>(() => new PrivateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateInfo(PrivateInfo other) : this() {
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateInfo Clone() {
      return new PrivateInfo(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::You.Facade.Proxies.v1.NullableString payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableString Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateInfo other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::You.Facade.Proxies.v1.NullableString();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::You.Facade.Proxies.v1.NullableString();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonalInfo : pb::IMessage<PersonalInfo> {
    private static readonly pb::MessageParser<PersonalInfo> _parser = new pb::MessageParser<PersonalInfo>(() => new PersonalInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonalInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonalInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonalInfo(PersonalInfo other) : this() {
      login_ = other.login_;
      gender_ = other.gender_;
      language_ = other.language_;
      parental_ = other.parental_;
      marriage_ = other.marriage_;
      dateOfBirth_ = other.dateOfBirth_ != null ? other.dateOfBirth_.Clone() : null;
      hasLastName_ = other.hasLastName_;
      hasFirstName_ = other.hasFirstName_;
      profileStrengthInPercent_ = other.profileStrengthInPercent_;
      interestStrengthInPercent_ = other.interestStrengthInPercent_;
      kycStrengthInPercent_ = other.kycStrengthInPercent_;
      totalStrengthInPercent_ = other.totalStrengthInPercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonalInfo Clone() {
      return new PersonalInfo(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 2;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parental" field.</summary>
    public const int ParentalFieldNumber = 4;
    private string parental_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parental {
      get { return parental_; }
      set {
        parental_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "marriage" field.</summary>
    public const int MarriageFieldNumber = 5;
    private string marriage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Marriage {
      get { return marriage_; }
      set {
        marriage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dateOfBirth" field.</summary>
    public const int DateOfBirthFieldNumber = 6;
    private global::You.Facade.Proxies.v1.NullableTimeStamp dateOfBirth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableTimeStamp DateOfBirth {
      get { return dateOfBirth_; }
      set {
        dateOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "hasLastName" field.</summary>
    public const int HasLastNameFieldNumber = 7;
    private bool hasLastName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastName {
      get { return hasLastName_; }
      set {
        hasLastName_ = value;
      }
    }

    /// <summary>Field number for the "hasFirstName" field.</summary>
    public const int HasFirstNameFieldNumber = 8;
    private bool hasFirstName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstName {
      get { return hasFirstName_; }
      set {
        hasFirstName_ = value;
      }
    }

    /// <summary>Field number for the "profileStrengthInPercent" field.</summary>
    public const int ProfileStrengthInPercentFieldNumber = 9;
    private double profileStrengthInPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ProfileStrengthInPercent {
      get { return profileStrengthInPercent_; }
      set {
        profileStrengthInPercent_ = value;
      }
    }

    /// <summary>Field number for the "interestStrengthInPercent" field.</summary>
    public const int InterestStrengthInPercentFieldNumber = 10;
    private double interestStrengthInPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double InterestStrengthInPercent {
      get { return interestStrengthInPercent_; }
      set {
        interestStrengthInPercent_ = value;
      }
    }

    /// <summary>Field number for the "kycStrengthInPercent" field.</summary>
    public const int KycStrengthInPercentFieldNumber = 11;
    private double kycStrengthInPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double KycStrengthInPercent {
      get { return kycStrengthInPercent_; }
      set {
        kycStrengthInPercent_ = value;
      }
    }

    /// <summary>Field number for the "totalStrengthInPercent" field.</summary>
    public const int TotalStrengthInPercentFieldNumber = 12;
    private double totalStrengthInPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalStrengthInPercent {
      get { return totalStrengthInPercent_; }
      set {
        totalStrengthInPercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonalInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonalInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Gender != other.Gender) return false;
      if (Language != other.Language) return false;
      if (Parental != other.Parental) return false;
      if (Marriage != other.Marriage) return false;
      if (!object.Equals(DateOfBirth, other.DateOfBirth)) return false;
      if (HasLastName != other.HasLastName) return false;
      if (HasFirstName != other.HasFirstName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ProfileStrengthInPercent, other.ProfileStrengthInPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InterestStrengthInPercent, other.InterestStrengthInPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(KycStrengthInPercent, other.KycStrengthInPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalStrengthInPercent, other.TotalStrengthInPercent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Parental.Length != 0) hash ^= Parental.GetHashCode();
      if (Marriage.Length != 0) hash ^= Marriage.GetHashCode();
      if (dateOfBirth_ != null) hash ^= DateOfBirth.GetHashCode();
      if (HasLastName != false) hash ^= HasLastName.GetHashCode();
      if (HasFirstName != false) hash ^= HasFirstName.GetHashCode();
      if (ProfileStrengthInPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ProfileStrengthInPercent);
      if (InterestStrengthInPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InterestStrengthInPercent);
      if (KycStrengthInPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(KycStrengthInPercent);
      if (TotalStrengthInPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalStrengthInPercent);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gender);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (Parental.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parental);
      }
      if (Marriage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Marriage);
      }
      if (dateOfBirth_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateOfBirth);
      }
      if (HasLastName != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasLastName);
      }
      if (HasFirstName != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasFirstName);
      }
      if (ProfileStrengthInPercent != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(ProfileStrengthInPercent);
      }
      if (InterestStrengthInPercent != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(InterestStrengthInPercent);
      }
      if (KycStrengthInPercent != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(KycStrengthInPercent);
      }
      if (TotalStrengthInPercent != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(TotalStrengthInPercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Parental.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parental);
      }
      if (Marriage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Marriage);
      }
      if (dateOfBirth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateOfBirth);
      }
      if (HasLastName != false) {
        size += 1 + 1;
      }
      if (HasFirstName != false) {
        size += 1 + 1;
      }
      if (ProfileStrengthInPercent != 0D) {
        size += 1 + 8;
      }
      if (InterestStrengthInPercent != 0D) {
        size += 1 + 8;
      }
      if (KycStrengthInPercent != 0D) {
        size += 1 + 8;
      }
      if (TotalStrengthInPercent != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonalInfo other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Parental.Length != 0) {
        Parental = other.Parental;
      }
      if (other.Marriage.Length != 0) {
        Marriage = other.Marriage;
      }
      if (other.dateOfBirth_ != null) {
        if (dateOfBirth_ == null) {
          DateOfBirth = new global::You.Facade.Proxies.v1.NullableTimeStamp();
        }
        DateOfBirth.MergeFrom(other.DateOfBirth);
      }
      if (other.HasLastName != false) {
        HasLastName = other.HasLastName;
      }
      if (other.HasFirstName != false) {
        HasFirstName = other.HasFirstName;
      }
      if (other.ProfileStrengthInPercent != 0D) {
        ProfileStrengthInPercent = other.ProfileStrengthInPercent;
      }
      if (other.InterestStrengthInPercent != 0D) {
        InterestStrengthInPercent = other.InterestStrengthInPercent;
      }
      if (other.KycStrengthInPercent != 0D) {
        KycStrengthInPercent = other.KycStrengthInPercent;
      }
      if (other.TotalStrengthInPercent != 0D) {
        TotalStrengthInPercent = other.TotalStrengthInPercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Gender = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
          case 34: {
            Parental = input.ReadString();
            break;
          }
          case 42: {
            Marriage = input.ReadString();
            break;
          }
          case 50: {
            if (dateOfBirth_ == null) {
              DateOfBirth = new global::You.Facade.Proxies.v1.NullableTimeStamp();
            }
            input.ReadMessage(DateOfBirth);
            break;
          }
          case 56: {
            HasLastName = input.ReadBool();
            break;
          }
          case 64: {
            HasFirstName = input.ReadBool();
            break;
          }
          case 73: {
            ProfileStrengthInPercent = input.ReadDouble();
            break;
          }
          case 81: {
            InterestStrengthInPercent = input.ReadDouble();
            break;
          }
          case 89: {
            KycStrengthInPercent = input.ReadDouble();
            break;
          }
          case 97: {
            TotalStrengthInPercent = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GeoInfo : pb::IMessage<GeoInfo> {
    private static readonly pb::MessageParser<GeoInfo> _parser = new pb::MessageParser<GeoInfo>(() => new GeoInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoInfo(GeoInfo other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      administratives_ = other.administratives_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoInfo Clone() {
      return new GeoInfo(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "administratives" field.</summary>
    public const int AdministrativesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.Administrative> _repeated_administratives_codec
        = pb::FieldCodec.ForMessage(26, global::You.Facade.Proxies.v1.Administrative.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.Administrative> administratives_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.Administrative>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.Administrative> Administratives {
      get { return administratives_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if(!administratives_.Equals(other.administratives_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      hash ^= administratives_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      administratives_.WriteTo(output, _repeated_administratives_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      size += administratives_.CalculateSize(_repeated_administratives_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoInfo other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      administratives_.Add(other.administratives_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 26: {
            administratives_.AddEntriesFrom(input, _repeated_administratives_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Administrative : pb::IMessage<Administrative> {
    private static readonly pb::MessageParser<Administrative> _parser = new pb::MessageParser<Administrative>(() => new Administrative());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Administrative> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Administrative() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Administrative(Administrative other) : this() {
      adminLevel_ = other.adminLevel_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Administrative Clone() {
      return new Administrative(this);
    }

    /// <summary>Field number for the "adminLevel" field.</summary>
    public const int AdminLevelFieldNumber = 1;
    private int adminLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdminLevel {
      get { return adminLevel_; }
      set {
        adminLevel_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Administrative);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Administrative other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdminLevel != other.AdminLevel) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdminLevel != 0) hash ^= AdminLevel.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdminLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AdminLevel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdminLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdminLevel);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Administrative other) {
      if (other == null) {
        return;
      }
      if (other.AdminLevel != 0) {
        AdminLevel = other.AdminLevel;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdminLevel = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YouSocialSetting : pb::IMessage<YouSocialSetting> {
    private static readonly pb::MessageParser<YouSocialSetting> _parser = new pb::MessageParser<YouSocialSetting>(() => new YouSocialSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YouSocialSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouSocialSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouSocialSetting(YouSocialSetting other) : this() {
      isReadyToChat_ = other.isReadyToChat_;
      isFirstNameShared_ = other.isFirstNameShared_;
      isLastNameShared_ = other.isLastNameShared_;
      isAddressShared_ = other.isAddressShared_;
      isGenderShared_ = other.isGenderShared_;
      isLanguageShared_ = other.isLanguageShared_;
      isParentalShared_ = other.isParentalShared_;
      isMarriageShared_ = other.isMarriageShared_;
      isDayOfBirthShared_ = other.isDayOfBirthShared_;
      sharedInterestIds_ = other.sharedInterestIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YouSocialSetting Clone() {
      return new YouSocialSetting(this);
    }

    /// <summary>Field number for the "isReadyToChat" field.</summary>
    public const int IsReadyToChatFieldNumber = 1;
    private bool isReadyToChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReadyToChat {
      get { return isReadyToChat_; }
      set {
        isReadyToChat_ = value;
      }
    }

    /// <summary>Field number for the "isFirstNameShared" field.</summary>
    public const int IsFirstNameSharedFieldNumber = 2;
    private bool isFirstNameShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstNameShared {
      get { return isFirstNameShared_; }
      set {
        isFirstNameShared_ = value;
      }
    }

    /// <summary>Field number for the "isLastNameShared" field.</summary>
    public const int IsLastNameSharedFieldNumber = 3;
    private bool isLastNameShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastNameShared {
      get { return isLastNameShared_; }
      set {
        isLastNameShared_ = value;
      }
    }

    /// <summary>Field number for the "isAddressShared" field.</summary>
    public const int IsAddressSharedFieldNumber = 4;
    private bool isAddressShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAddressShared {
      get { return isAddressShared_; }
      set {
        isAddressShared_ = value;
      }
    }

    /// <summary>Field number for the "isGenderShared" field.</summary>
    public const int IsGenderSharedFieldNumber = 5;
    private bool isGenderShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGenderShared {
      get { return isGenderShared_; }
      set {
        isGenderShared_ = value;
      }
    }

    /// <summary>Field number for the "isLanguageShared" field.</summary>
    public const int IsLanguageSharedFieldNumber = 6;
    private bool isLanguageShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLanguageShared {
      get { return isLanguageShared_; }
      set {
        isLanguageShared_ = value;
      }
    }

    /// <summary>Field number for the "isParentalShared" field.</summary>
    public const int IsParentalSharedFieldNumber = 7;
    private bool isParentalShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsParentalShared {
      get { return isParentalShared_; }
      set {
        isParentalShared_ = value;
      }
    }

    /// <summary>Field number for the "isMarriageShared" field.</summary>
    public const int IsMarriageSharedFieldNumber = 8;
    private bool isMarriageShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMarriageShared {
      get { return isMarriageShared_; }
      set {
        isMarriageShared_ = value;
      }
    }

    /// <summary>Field number for the "isDayOfBirthShared" field.</summary>
    public const int IsDayOfBirthSharedFieldNumber = 9;
    private bool isDayOfBirthShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDayOfBirthShared {
      get { return isDayOfBirthShared_; }
      set {
        isDayOfBirthShared_ = value;
      }
    }

    /// <summary>Field number for the "sharedInterestIds" field.</summary>
    public const int SharedInterestIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<ulong> _repeated_sharedInterestIds_codec
        = pb::FieldCodec.ForUInt64(82);
    private readonly pbc::RepeatedField<ulong> sharedInterestIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> SharedInterestIds {
      get { return sharedInterestIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YouSocialSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YouSocialSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsReadyToChat != other.IsReadyToChat) return false;
      if (IsFirstNameShared != other.IsFirstNameShared) return false;
      if (IsLastNameShared != other.IsLastNameShared) return false;
      if (IsAddressShared != other.IsAddressShared) return false;
      if (IsGenderShared != other.IsGenderShared) return false;
      if (IsLanguageShared != other.IsLanguageShared) return false;
      if (IsParentalShared != other.IsParentalShared) return false;
      if (IsMarriageShared != other.IsMarriageShared) return false;
      if (IsDayOfBirthShared != other.IsDayOfBirthShared) return false;
      if(!sharedInterestIds_.Equals(other.sharedInterestIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsReadyToChat != false) hash ^= IsReadyToChat.GetHashCode();
      if (IsFirstNameShared != false) hash ^= IsFirstNameShared.GetHashCode();
      if (IsLastNameShared != false) hash ^= IsLastNameShared.GetHashCode();
      if (IsAddressShared != false) hash ^= IsAddressShared.GetHashCode();
      if (IsGenderShared != false) hash ^= IsGenderShared.GetHashCode();
      if (IsLanguageShared != false) hash ^= IsLanguageShared.GetHashCode();
      if (IsParentalShared != false) hash ^= IsParentalShared.GetHashCode();
      if (IsMarriageShared != false) hash ^= IsMarriageShared.GetHashCode();
      if (IsDayOfBirthShared != false) hash ^= IsDayOfBirthShared.GetHashCode();
      hash ^= sharedInterestIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsReadyToChat != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsReadyToChat);
      }
      if (IsFirstNameShared != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFirstNameShared);
      }
      if (IsLastNameShared != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsLastNameShared);
      }
      if (IsAddressShared != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAddressShared);
      }
      if (IsGenderShared != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsGenderShared);
      }
      if (IsLanguageShared != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLanguageShared);
      }
      if (IsParentalShared != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsParentalShared);
      }
      if (IsMarriageShared != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsMarriageShared);
      }
      if (IsDayOfBirthShared != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsDayOfBirthShared);
      }
      sharedInterestIds_.WriteTo(output, _repeated_sharedInterestIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsReadyToChat != false) {
        size += 1 + 1;
      }
      if (IsFirstNameShared != false) {
        size += 1 + 1;
      }
      if (IsLastNameShared != false) {
        size += 1 + 1;
      }
      if (IsAddressShared != false) {
        size += 1 + 1;
      }
      if (IsGenderShared != false) {
        size += 1 + 1;
      }
      if (IsLanguageShared != false) {
        size += 1 + 1;
      }
      if (IsParentalShared != false) {
        size += 1 + 1;
      }
      if (IsMarriageShared != false) {
        size += 1 + 1;
      }
      if (IsDayOfBirthShared != false) {
        size += 1 + 1;
      }
      size += sharedInterestIds_.CalculateSize(_repeated_sharedInterestIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YouSocialSetting other) {
      if (other == null) {
        return;
      }
      if (other.IsReadyToChat != false) {
        IsReadyToChat = other.IsReadyToChat;
      }
      if (other.IsFirstNameShared != false) {
        IsFirstNameShared = other.IsFirstNameShared;
      }
      if (other.IsLastNameShared != false) {
        IsLastNameShared = other.IsLastNameShared;
      }
      if (other.IsAddressShared != false) {
        IsAddressShared = other.IsAddressShared;
      }
      if (other.IsGenderShared != false) {
        IsGenderShared = other.IsGenderShared;
      }
      if (other.IsLanguageShared != false) {
        IsLanguageShared = other.IsLanguageShared;
      }
      if (other.IsParentalShared != false) {
        IsParentalShared = other.IsParentalShared;
      }
      if (other.IsMarriageShared != false) {
        IsMarriageShared = other.IsMarriageShared;
      }
      if (other.IsDayOfBirthShared != false) {
        IsDayOfBirthShared = other.IsDayOfBirthShared;
      }
      sharedInterestIds_.Add(other.sharedInterestIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsReadyToChat = input.ReadBool();
            break;
          }
          case 16: {
            IsFirstNameShared = input.ReadBool();
            break;
          }
          case 24: {
            IsLastNameShared = input.ReadBool();
            break;
          }
          case 32: {
            IsAddressShared = input.ReadBool();
            break;
          }
          case 40: {
            IsGenderShared = input.ReadBool();
            break;
          }
          case 48: {
            IsLanguageShared = input.ReadBool();
            break;
          }
          case 56: {
            IsParentalShared = input.ReadBool();
            break;
          }
          case 64: {
            IsMarriageShared = input.ReadBool();
            break;
          }
          case 72: {
            IsDayOfBirthShared = input.ReadBool();
            break;
          }
          case 82:
          case 80: {
            sharedInterestIds_.AddEntriesFrom(input, _repeated_sharedInterestIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Interest : pb::IMessage<Interest> {
    private static readonly pb::MessageParser<Interest> _parser = new pb::MessageParser<Interest>(() => new Interest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Interest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interest(Interest other) : this() {
      id_ = other.id_;
      categoryId_ = other.categoryId_;
      groupId_ = other.groupId_;
      parentId_ = other.parentId_;
      isPrimary_ = other.isPrimary_;
      isNegative_ = other.isNegative_;
      lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interest Clone() {
      return new Interest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 2;
    private ulong categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private ulong groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "parentId" field.</summary>
    public const int ParentIdFieldNumber = 4;
    private ulong parentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ParentId {
      get { return parentId_; }
      set {
        parentId_ = value;
      }
    }

    /// <summary>Field number for the "isPrimary" field.</summary>
    public const int IsPrimaryFieldNumber = 5;
    private bool isPrimary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrimary {
      get { return isPrimary_; }
      set {
        isPrimary_ = value;
      }
    }

    /// <summary>Field number for the "isNegative" field.</summary>
    public const int IsNegativeFieldNumber = 6;
    private bool isNegative_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNegative {
      get { return isNegative_; }
      set {
        isNegative_ = value;
      }
    }

    /// <summary>Field number for the "lastUpdated" field.</summary>
    public const int LastUpdatedFieldNumber = 7;
    private global::You.Facade.Proxies.v1.NullableTimeStamp lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableTimeStamp LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Interest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Interest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CategoryId != other.CategoryId) return false;
      if (GroupId != other.GroupId) return false;
      if (ParentId != other.ParentId) return false;
      if (IsPrimary != other.IsPrimary) return false;
      if (IsNegative != other.IsNegative) return false;
      if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (CategoryId != 0UL) hash ^= CategoryId.GetHashCode();
      if (GroupId != 0UL) hash ^= GroupId.GetHashCode();
      if (ParentId != 0UL) hash ^= ParentId.GetHashCode();
      if (IsPrimary != false) hash ^= IsPrimary.GetHashCode();
      if (IsNegative != false) hash ^= IsNegative.GetHashCode();
      if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (CategoryId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CategoryId);
      }
      if (GroupId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GroupId);
      }
      if (ParentId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ParentId);
      }
      if (IsPrimary != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsPrimary);
      }
      if (IsNegative != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsNegative);
      }
      if (lastUpdated_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (CategoryId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CategoryId);
      }
      if (GroupId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GroupId);
      }
      if (ParentId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParentId);
      }
      if (IsPrimary != false) {
        size += 1 + 1;
      }
      if (IsNegative != false) {
        size += 1 + 1;
      }
      if (lastUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Interest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.CategoryId != 0UL) {
        CategoryId = other.CategoryId;
      }
      if (other.GroupId != 0UL) {
        GroupId = other.GroupId;
      }
      if (other.ParentId != 0UL) {
        ParentId = other.ParentId;
      }
      if (other.IsPrimary != false) {
        IsPrimary = other.IsPrimary;
      }
      if (other.IsNegative != false) {
        IsNegative = other.IsNegative;
      }
      if (other.lastUpdated_ != null) {
        if (lastUpdated_ == null) {
          LastUpdated = new global::You.Facade.Proxies.v1.NullableTimeStamp();
        }
        LastUpdated.MergeFrom(other.LastUpdated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            CategoryId = input.ReadUInt64();
            break;
          }
          case 24: {
            GroupId = input.ReadUInt64();
            break;
          }
          case 32: {
            ParentId = input.ReadUInt64();
            break;
          }
          case 40: {
            IsPrimary = input.ReadBool();
            break;
          }
          case 48: {
            IsNegative = input.ReadBool();
            break;
          }
          case 58: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::You.Facade.Proxies.v1.NullableTimeStamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectionableContentRequest : pb::IMessage<ObjectionableContentRequest> {
    private static readonly pb::MessageParser<ObjectionableContentRequest> _parser = new pb::MessageParser<ObjectionableContentRequest>(() => new ObjectionableContentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectionableContentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentRequest(ObjectionableContentRequest other) : this() {
      adId_ = other.adId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentRequest Clone() {
      return new ObjectionableContentRequest(this);
    }

    /// <summary>Field number for the "adId" field.</summary>
    public const int AdIdFieldNumber = 1;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectionableContentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectionableContentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdId != other.AdId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AdId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectionableContentRequest other) {
      if (other == null) {
        return;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdministrativeRequest : pb::IMessage<AdministrativeRequest> {
    private static readonly pb::MessageParser<AdministrativeRequest> _parser = new pb::MessageParser<AdministrativeRequest>(() => new AdministrativeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdministrativeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeRequest(AdministrativeRequest other) : this() {
      adminLevel_ = other.adminLevel_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeRequest Clone() {
      return new AdministrativeRequest(this);
    }

    /// <summary>Field number for the "adminLevel" field.</summary>
    public const int AdminLevelFieldNumber = 1;
    private int adminLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdminLevel {
      get { return adminLevel_; }
      set {
        adminLevel_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdministrativeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdministrativeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdminLevel != other.AdminLevel) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdminLevel != 0) hash ^= AdminLevel.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdminLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AdminLevel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdminLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdminLevel);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdministrativeRequest other) {
      if (other == null) {
        return;
      }
      if (other.AdminLevel != 0) {
        AdminLevel = other.AdminLevel;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdminLevel = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalanceRequest : pb::IMessage<BalanceRequest> {
    private static readonly pb::MessageParser<BalanceRequest> _parser = new pb::MessageParser<BalanceRequest>(() => new BalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest(BalanceRequest other) : this() {
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest Clone() {
      return new BalanceRequest(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 1;
    private global::You.Facade.Proxies.v1.Currency currency_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency != 0) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Currency != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Currency != 0) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Currency = (global::You.Facade.Proxies.v1.Currency) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerTxResponses : pb::IMessage<PeerTxResponses> {
    private static readonly pb::MessageParser<PeerTxResponses> _parser = new pb::MessageParser<PeerTxResponses>(() => new PeerTxResponses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerTxResponses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponses(PeerTxResponses other) : this() {
      totalCount_ = other.totalCount_;
      txs_ = other.txs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponses Clone() {
      return new PeerTxResponses(this);
    }

    /// <summary>Field number for the "totalCount" field.</summary>
    public const int TotalCountFieldNumber = 1;
    private int totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "txs" field.</summary>
    public const int TxsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.PeerTxResponse> _repeated_txs_codec
        = pb::FieldCodec.ForMessage(18, global::You.Facade.Proxies.v1.PeerTxResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.PeerTxResponse> txs_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.PeerTxResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.PeerTxResponse> Txs {
      get { return txs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerTxResponses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerTxResponses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalCount != other.TotalCount) return false;
      if(!txs_.Equals(other.txs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalCount != 0) hash ^= TotalCount.GetHashCode();
      hash ^= txs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalCount);
      }
      txs_.WriteTo(output, _repeated_txs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCount);
      }
      size += txs_.CalculateSize(_repeated_txs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerTxResponses other) {
      if (other == null) {
        return;
      }
      if (other.TotalCount != 0) {
        TotalCount = other.TotalCount;
      }
      txs_.Add(other.txs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalCount = input.ReadInt32();
            break;
          }
          case 18: {
            txs_.AddEntriesFrom(input, _repeated_txs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerTxResponse : pb::IMessage<PeerTxResponse> {
    private static readonly pb::MessageParser<PeerTxResponse> _parser = new pb::MessageParser<PeerTxResponse>(() => new PeerTxResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerTxResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponse(PeerTxResponse other) : this() {
      status_ = other.status_;
      trxId_ = other.trxId_;
      amount_ = other.amount_;
      fee_ = other.fee_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      stop_ = other.stop_ != null ? other.stop_.Clone() : null;
      description_ = other.description_;
      type_ = other.type_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTxResponse Clone() {
      return new PeerTxResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ResponseStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "trxId" field.</summary>
    public const int TrxIdFieldNumber = 2;
    private ulong trxId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TrxId {
      get { return trxId_; }
      set {
        trxId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private double amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 4;
    private double fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "stop" field.</summary>
    public const int StopFieldNumber = 6;
    private global::You.Facade.Proxies.v1.NullableTimeStamp stop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableTimeStamp Stop {
      get { return stop_; }
      set {
        stop_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 8;
    private global::You.Facade.Proxies.v1.OperationType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.OperationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerTxResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerTxResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (TrxId != other.TrxId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Amount, other.Amount)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Fee, other.Fee)) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(Stop, other.Stop)) return false;
      if (Description != other.Description) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (TrxId != 0UL) hash ^= TrxId.GetHashCode();
      if (Amount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Amount);
      if (Fee != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Fee);
      if (start_ != null) hash ^= Start.GetHashCode();
      if (stop_ != null) hash ^= Stop.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (TrxId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TrxId);
      }
      if (Amount != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Amount);
      }
      if (Fee != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Fee);
      }
      if (start_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Start);
      }
      if (stop_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Stop);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (Type != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Type);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TrxId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TrxId);
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (Fee != 0D) {
        size += 1 + 8;
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (stop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stop);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerTxResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.TrxId != 0UL) {
        TrxId = other.TrxId;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.Fee != 0D) {
        Fee = other.Fee;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.stop_ != null) {
        if (stop_ == null) {
          Stop = new global::You.Facade.Proxies.v1.NullableTimeStamp();
        }
        Stop.MergeFrom(other.Stop);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::You.Facade.Proxies.v1.ResponseStatus) input.ReadEnum();
            break;
          }
          case 16: {
            TrxId = input.ReadUInt64();
            break;
          }
          case 25: {
            Amount = input.ReadDouble();
            break;
          }
          case 33: {
            Fee = input.ReadDouble();
            break;
          }
          case 42: {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Start);
            break;
          }
          case 50: {
            if (stop_ == null) {
              Stop = new global::You.Facade.Proxies.v1.NullableTimeStamp();
            }
            input.ReadMessage(Stop);
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 64: {
            Type = (global::You.Facade.Proxies.v1.OperationType) input.ReadEnum();
            break;
          }
          case 74: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MetricResponse : pb::IMessage<MetricResponse> {
    private static readonly pb::MessageParser<MetricResponse> _parser = new pb::MessageParser<MetricResponse>(() => new MetricResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricResponse(MetricResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricResponse Clone() {
      return new MetricResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IsExistsResponse : pb::IMessage<IsExistsResponse> {
    private static readonly pb::MessageParser<IsExistsResponse> _parser = new pb::MessageParser<IsExistsResponse>(() => new IsExistsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsExistsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsResponse(IsExistsResponse other) : this() {
      isExists_ = other.isExists_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsExistsResponse Clone() {
      return new IsExistsResponse(this);
    }

    /// <summary>Field number for the "isExists" field.</summary>
    public const int IsExistsFieldNumber = 1;
    private bool isExists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExists {
      get { return isExists_; }
      set {
        isExists_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsExistsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsExistsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsExists != other.IsExists) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsExists != false) hash ^= IsExists.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsExists != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsExists);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsExists != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsExistsResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsExists != false) {
        IsExists = other.IsExists;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsExists = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProfileCostResponse : pb::IMessage<ProfileCostResponse> {
    private static readonly pb::MessageParser<ProfileCostResponse> _parser = new pb::MessageParser<ProfileCostResponse>(() => new ProfileCostResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileCostResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostResponse(ProfileCostResponse other) : this() {
      profileCost_ = other.profileCost_;
      interestsCost_ = other.interestsCost_;
      kycCost_ = other.kycCost_;
      totalCost_ = other.totalCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileCostResponse Clone() {
      return new ProfileCostResponse(this);
    }

    /// <summary>Field number for the "profileCost" field.</summary>
    public const int ProfileCostFieldNumber = 1;
    private double profileCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ProfileCost {
      get { return profileCost_; }
      set {
        profileCost_ = value;
      }
    }

    /// <summary>Field number for the "interestsCost" field.</summary>
    public const int InterestsCostFieldNumber = 2;
    private double interestsCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double InterestsCost {
      get { return interestsCost_; }
      set {
        interestsCost_ = value;
      }
    }

    /// <summary>Field number for the "kycCost" field.</summary>
    public const int KycCostFieldNumber = 3;
    private double kycCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double KycCost {
      get { return kycCost_; }
      set {
        kycCost_ = value;
      }
    }

    /// <summary>Field number for the "totalCost" field.</summary>
    public const int TotalCostFieldNumber = 4;
    private double totalCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalCost {
      get { return totalCost_; }
      set {
        totalCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileCostResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileCostResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ProfileCost, other.ProfileCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InterestsCost, other.InterestsCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(KycCost, other.KycCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalCost, other.TotalCost)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProfileCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ProfileCost);
      if (InterestsCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InterestsCost);
      if (KycCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(KycCost);
      if (TotalCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalCost);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProfileCost != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(ProfileCost);
      }
      if (InterestsCost != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(InterestsCost);
      }
      if (KycCost != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(KycCost);
      }
      if (TotalCost != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TotalCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProfileCost != 0D) {
        size += 1 + 8;
      }
      if (InterestsCost != 0D) {
        size += 1 + 8;
      }
      if (KycCost != 0D) {
        size += 1 + 8;
      }
      if (TotalCost != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileCostResponse other) {
      if (other == null) {
        return;
      }
      if (other.ProfileCost != 0D) {
        ProfileCost = other.ProfileCost;
      }
      if (other.InterestsCost != 0D) {
        InterestsCost = other.InterestsCost;
      }
      if (other.KycCost != 0D) {
        KycCost = other.KycCost;
      }
      if (other.TotalCost != 0D) {
        TotalCost = other.TotalCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ProfileCost = input.ReadDouble();
            break;
          }
          case 17: {
            InterestsCost = input.ReadDouble();
            break;
          }
          case 25: {
            KycCost = input.ReadDouble();
            break;
          }
          case 33: {
            TotalCost = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetProfileResponse : pb::IMessage<GetProfileResponse> {
    private static readonly pb::MessageParser<GetProfileResponse> _parser = new pb::MessageParser<GetProfileResponse>(() => new GetProfileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileResponse(GetProfileResponse other) : this() {
      publicInfo_ = other.publicInfo_ != null ? other.publicInfo_.Clone() : null;
      privateInfo_ = other.privateInfo_ != null ? other.privateInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileResponse Clone() {
      return new GetProfileResponse(this);
    }

    /// <summary>Field number for the "publicInfo" field.</summary>
    public const int PublicInfoFieldNumber = 1;
    private global::You.Facade.Proxies.v1.PublicInfo publicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PublicInfo PublicInfo {
      get { return publicInfo_; }
      set {
        publicInfo_ = value;
      }
    }

    /// <summary>Field number for the "privateInfo" field.</summary>
    public const int PrivateInfoFieldNumber = 2;
    private global::You.Facade.Proxies.v1.PrivateInfo privateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PrivateInfo PrivateInfo {
      get { return privateInfo_; }
      set {
        privateInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicInfo, other.PublicInfo)) return false;
      if (!object.Equals(PrivateInfo, other.PrivateInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (publicInfo_ != null) hash ^= PublicInfo.GetHashCode();
      if (privateInfo_ != null) hash ^= PrivateInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (publicInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicInfo);
      }
      if (privateInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PrivateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (publicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicInfo);
      }
      if (privateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProfileResponse other) {
      if (other == null) {
        return;
      }
      if (other.publicInfo_ != null) {
        if (publicInfo_ == null) {
          PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
        }
        PublicInfo.MergeFrom(other.PublicInfo);
      }
      if (other.privateInfo_ != null) {
        if (privateInfo_ == null) {
          PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
        }
        PrivateInfo.MergeFrom(other.PrivateInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (publicInfo_ == null) {
              PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
            }
            input.ReadMessage(PublicInfo);
            break;
          }
          case 18: {
            if (privateInfo_ == null) {
              PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
            }
            input.ReadMessage(PrivateInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterestResponse : pb::IMessage<InterestResponse> {
    private static readonly pb::MessageParser<InterestResponse> _parser = new pb::MessageParser<InterestResponse>(() => new InterestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterestResponse(InterestResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterestResponse Clone() {
      return new InterestResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterestResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AdHistoryResponses : pb::IMessage<AdHistoryResponses> {
    private static readonly pb::MessageParser<AdHistoryResponses> _parser = new pb::MessageParser<AdHistoryResponses>(() => new AdHistoryResponses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdHistoryResponses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponses(AdHistoryResponses other) : this() {
      adHistory_ = other.adHistory_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponses Clone() {
      return new AdHistoryResponses(this);
    }

    /// <summary>Field number for the "adHistory" field.</summary>
    public const int AdHistoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.AdHistoryResponse> _repeated_adHistory_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.AdHistoryResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.AdHistoryResponse> adHistory_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.AdHistoryResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.AdHistoryResponse> AdHistory {
      get { return adHistory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdHistoryResponses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdHistoryResponses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!adHistory_.Equals(other.adHistory_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= adHistory_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      adHistory_.WriteTo(output, _repeated_adHistory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += adHistory_.CalculateSize(_repeated_adHistory_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdHistoryResponses other) {
      if (other == null) {
        return;
      }
      adHistory_.Add(other.adHistory_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            adHistory_.AddEntriesFrom(input, _repeated_adHistory_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdHistoryResponse : pb::IMessage<AdHistoryResponse> {
    private static readonly pb::MessageParser<AdHistoryResponse> _parser = new pb::MessageParser<AdHistoryResponse>(() => new AdHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponse(AdHistoryResponse other) : this() {
      adId_ = other.adId_;
      actionType_ = other.actionType_;
      btnTxtString_ = other.btnTxtString_;
      isBtnExists_ = other.isBtnExists_;
      isImage_ = other.isImage_;
      length_ = other.length_;
      actionUrl_ = other.actionUrl_;
      videoUrl_ = other.videoUrl_;
      coverImageUrl_ = other.coverImageUrl_;
      campaignId_ = other.campaignId_;
      cost_ = other.cost_;
      descriptionPrimary_ = other.descriptionPrimary_;
      descriptionPrimaryBold_ = other.descriptionPrimaryBold_;
      descriptionSecondary_ = other.descriptionSecondary_;
      logoUrl_ = other.logoUrl_;
      expiredAt_ = other.expiredAt_ != null ? other.expiredAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdHistoryResponse Clone() {
      return new AdHistoryResponse(this);
    }

    /// <summary>Field number for the "adId" field.</summary>
    public const int AdIdFieldNumber = 1;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 2;
    private ulong actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "btnTxtString" field.</summary>
    public const int BtnTxtStringFieldNumber = 3;
    private string btnTxtString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BtnTxtString {
      get { return btnTxtString_; }
      set {
        btnTxtString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isBtnExists" field.</summary>
    public const int IsBtnExistsFieldNumber = 4;
    private bool isBtnExists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBtnExists {
      get { return isBtnExists_; }
      set {
        isBtnExists_ = value;
      }
    }

    /// <summary>Field number for the "isImage" field.</summary>
    public const int IsImageFieldNumber = 5;
    private bool isImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsImage {
      get { return isImage_; }
      set {
        isImage_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 6;
    private double length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "actionUrl" field.</summary>
    public const int ActionUrlFieldNumber = 7;
    private string actionUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionUrl {
      get { return actionUrl_; }
      set {
        actionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "videoUrl" field.</summary>
    public const int VideoUrlFieldNumber = 8;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "coverImageUrl" field.</summary>
    public const int CoverImageUrlFieldNumber = 9;
    private string coverImageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoverImageUrl {
      get { return coverImageUrl_; }
      set {
        coverImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 10;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 11;
    private double cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "descriptionPrimary" field.</summary>
    public const int DescriptionPrimaryFieldNumber = 12;
    private string descriptionPrimary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionPrimary {
      get { return descriptionPrimary_; }
      set {
        descriptionPrimary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionPrimaryBold" field.</summary>
    public const int DescriptionPrimaryBoldFieldNumber = 13;
    private bool descriptionPrimaryBold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DescriptionPrimaryBold {
      get { return descriptionPrimaryBold_; }
      set {
        descriptionPrimaryBold_ = value;
      }
    }

    /// <summary>Field number for the "descriptionSecondary" field.</summary>
    public const int DescriptionSecondaryFieldNumber = 14;
    private string descriptionSecondary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionSecondary {
      get { return descriptionSecondary_; }
      set {
        descriptionSecondary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logoUrl" field.</summary>
    public const int LogoUrlFieldNumber = 15;
    private string logoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogoUrl {
      get { return logoUrl_; }
      set {
        logoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiredAt" field.</summary>
    public const int ExpiredAtFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdId != other.AdId) return false;
      if (ActionType != other.ActionType) return false;
      if (BtnTxtString != other.BtnTxtString) return false;
      if (IsBtnExists != other.IsBtnExists) return false;
      if (IsImage != other.IsImage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
      if (ActionUrl != other.ActionUrl) return false;
      if (VideoUrl != other.VideoUrl) return false;
      if (CoverImageUrl != other.CoverImageUrl) return false;
      if (CampaignId != other.CampaignId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Cost, other.Cost)) return false;
      if (DescriptionPrimary != other.DescriptionPrimary) return false;
      if (DescriptionPrimaryBold != other.DescriptionPrimaryBold) return false;
      if (DescriptionSecondary != other.DescriptionSecondary) return false;
      if (LogoUrl != other.LogoUrl) return false;
      if (!object.Equals(ExpiredAt, other.ExpiredAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      if (ActionType != 0UL) hash ^= ActionType.GetHashCode();
      if (BtnTxtString.Length != 0) hash ^= BtnTxtString.GetHashCode();
      if (IsBtnExists != false) hash ^= IsBtnExists.GetHashCode();
      if (IsImage != false) hash ^= IsImage.GetHashCode();
      if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
      if (ActionUrl.Length != 0) hash ^= ActionUrl.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (CoverImageUrl.Length != 0) hash ^= CoverImageUrl.GetHashCode();
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (Cost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Cost);
      if (DescriptionPrimary.Length != 0) hash ^= DescriptionPrimary.GetHashCode();
      if (DescriptionPrimaryBold != false) hash ^= DescriptionPrimaryBold.GetHashCode();
      if (DescriptionSecondary.Length != 0) hash ^= DescriptionSecondary.GetHashCode();
      if (LogoUrl.Length != 0) hash ^= LogoUrl.GetHashCode();
      if (expiredAt_ != null) hash ^= ExpiredAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AdId);
      }
      if (ActionType != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ActionType);
      }
      if (BtnTxtString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BtnTxtString);
      }
      if (IsBtnExists != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBtnExists);
      }
      if (IsImage != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsImage);
      }
      if (Length != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Length);
      }
      if (ActionUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActionUrl);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(VideoUrl);
      }
      if (CoverImageUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CoverImageUrl);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(CampaignId);
      }
      if (Cost != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Cost);
      }
      if (DescriptionPrimary.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DescriptionPrimary);
      }
      if (DescriptionPrimaryBold != false) {
        output.WriteRawTag(104);
        output.WriteBool(DescriptionPrimaryBold);
      }
      if (DescriptionSecondary.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DescriptionSecondary);
      }
      if (LogoUrl.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(LogoUrl);
      }
      if (expiredAt_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ExpiredAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      if (ActionType != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ActionType);
      }
      if (BtnTxtString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BtnTxtString);
      }
      if (IsBtnExists != false) {
        size += 1 + 1;
      }
      if (IsImage != false) {
        size += 1 + 1;
      }
      if (Length != 0D) {
        size += 1 + 8;
      }
      if (ActionUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUrl);
      }
      if (VideoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (CoverImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoverImageUrl);
      }
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (Cost != 0D) {
        size += 1 + 8;
      }
      if (DescriptionPrimary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionPrimary);
      }
      if (DescriptionPrimaryBold != false) {
        size += 1 + 1;
      }
      if (DescriptionSecondary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionSecondary);
      }
      if (LogoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogoUrl);
      }
      if (expiredAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpiredAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdHistoryResponse other) {
      if (other == null) {
        return;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      if (other.ActionType != 0UL) {
        ActionType = other.ActionType;
      }
      if (other.BtnTxtString.Length != 0) {
        BtnTxtString = other.BtnTxtString;
      }
      if (other.IsBtnExists != false) {
        IsBtnExists = other.IsBtnExists;
      }
      if (other.IsImage != false) {
        IsImage = other.IsImage;
      }
      if (other.Length != 0D) {
        Length = other.Length;
      }
      if (other.ActionUrl.Length != 0) {
        ActionUrl = other.ActionUrl;
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      if (other.CoverImageUrl.Length != 0) {
        CoverImageUrl = other.CoverImageUrl;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.Cost != 0D) {
        Cost = other.Cost;
      }
      if (other.DescriptionPrimary.Length != 0) {
        DescriptionPrimary = other.DescriptionPrimary;
      }
      if (other.DescriptionPrimaryBold != false) {
        DescriptionPrimaryBold = other.DescriptionPrimaryBold;
      }
      if (other.DescriptionSecondary.Length != 0) {
        DescriptionSecondary = other.DescriptionSecondary;
      }
      if (other.LogoUrl.Length != 0) {
        LogoUrl = other.LogoUrl;
      }
      if (other.expiredAt_ != null) {
        if (expiredAt_ == null) {
          ExpiredAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredAt.MergeFrom(other.ExpiredAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdId = input.ReadUInt64();
            break;
          }
          case 16: {
            ActionType = input.ReadUInt64();
            break;
          }
          case 26: {
            BtnTxtString = input.ReadString();
            break;
          }
          case 32: {
            IsBtnExists = input.ReadBool();
            break;
          }
          case 40: {
            IsImage = input.ReadBool();
            break;
          }
          case 49: {
            Length = input.ReadDouble();
            break;
          }
          case 58: {
            ActionUrl = input.ReadString();
            break;
          }
          case 66: {
            VideoUrl = input.ReadString();
            break;
          }
          case 74: {
            CoverImageUrl = input.ReadString();
            break;
          }
          case 80: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 89: {
            Cost = input.ReadDouble();
            break;
          }
          case 98: {
            DescriptionPrimary = input.ReadString();
            break;
          }
          case 104: {
            DescriptionPrimaryBold = input.ReadBool();
            break;
          }
          case 114: {
            DescriptionSecondary = input.ReadString();
            break;
          }
          case 122: {
            LogoUrl = input.ReadString();
            break;
          }
          case 130: {
            if (expiredAt_ == null) {
              ExpiredAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdResponses : pb::IMessage<AdResponses> {
    private static readonly pb::MessageParser<AdResponses> _parser = new pb::MessageParser<AdResponses>(() => new AdResponses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdResponses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponses(AdResponses other) : this() {
      ads_ = other.ads_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponses Clone() {
      return new AdResponses(this);
    }

    /// <summary>Field number for the "Ads" field.</summary>
    public const int AdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.AdResponse> _repeated_ads_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.AdResponse.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.AdResponse> ads_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.AdResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.AdResponse> Ads {
      get { return ads_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdResponses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdResponses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ads_.Equals(other.ads_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ads_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ads_.WriteTo(output, _repeated_ads_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ads_.CalculateSize(_repeated_ads_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdResponses other) {
      if (other == null) {
        return;
      }
      ads_.Add(other.ads_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ads_.AddEntriesFrom(input, _repeated_ads_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdResponse : pb::IMessage<AdResponse> {
    private static readonly pb::MessageParser<AdResponse> _parser = new pb::MessageParser<AdResponse>(() => new AdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponse(AdResponse other) : this() {
      adId_ = other.adId_;
      actionType_ = other.actionType_;
      btnTxtString_ = other.btnTxtString_;
      isBtnExists_ = other.isBtnExists_;
      length_ = other.length_;
      actionUrl_ = other.actionUrl_;
      videoUrl_ = other.videoUrl_;
      coverImageUrl_ = other.coverImageUrl_;
      campaignId_ = other.campaignId_;
      cost_ = other.cost_;
      descriptionPrimary_ = other.descriptionPrimary_;
      descriptionPrimaryBold_ = other.descriptionPrimaryBold_;
      descriptionSecondary_ = other.descriptionSecondary_;
      logoUrl_ = other.logoUrl_;
      expiredAt_ = other.expiredAt_ != null ? other.expiredAt_.Clone() : null;
      isImage_ = other.isImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdResponse Clone() {
      return new AdResponse(this);
    }

    /// <summary>Field number for the "adId" field.</summary>
    public const int AdIdFieldNumber = 1;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 2;
    private ulong actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "btnTxtString" field.</summary>
    public const int BtnTxtStringFieldNumber = 3;
    private string btnTxtString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BtnTxtString {
      get { return btnTxtString_; }
      set {
        btnTxtString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isBtnExists" field.</summary>
    public const int IsBtnExistsFieldNumber = 4;
    private bool isBtnExists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBtnExists {
      get { return isBtnExists_; }
      set {
        isBtnExists_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private double length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "actionUrl" field.</summary>
    public const int ActionUrlFieldNumber = 6;
    private string actionUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionUrl {
      get { return actionUrl_; }
      set {
        actionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "videoUrl" field.</summary>
    public const int VideoUrlFieldNumber = 7;
    private string videoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VideoUrl {
      get { return videoUrl_; }
      set {
        videoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "coverImageUrl" field.</summary>
    public const int CoverImageUrlFieldNumber = 8;
    private string coverImageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoverImageUrl {
      get { return coverImageUrl_; }
      set {
        coverImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 9;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 10;
    private double cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "descriptionPrimary" field.</summary>
    public const int DescriptionPrimaryFieldNumber = 11;
    private string descriptionPrimary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionPrimary {
      get { return descriptionPrimary_; }
      set {
        descriptionPrimary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionPrimaryBold" field.</summary>
    public const int DescriptionPrimaryBoldFieldNumber = 12;
    private bool descriptionPrimaryBold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DescriptionPrimaryBold {
      get { return descriptionPrimaryBold_; }
      set {
        descriptionPrimaryBold_ = value;
      }
    }

    /// <summary>Field number for the "descriptionSecondary" field.</summary>
    public const int DescriptionSecondaryFieldNumber = 13;
    private string descriptionSecondary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionSecondary {
      get { return descriptionSecondary_; }
      set {
        descriptionSecondary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logoUrl" field.</summary>
    public const int LogoUrlFieldNumber = 14;
    private string logoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogoUrl {
      get { return logoUrl_; }
      set {
        logoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiredAt" field.</summary>
    public const int ExpiredAtFieldNumber = 15;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredAt {
      get { return expiredAt_; }
      set {
        expiredAt_ = value;
      }
    }

    /// <summary>Field number for the "isImage" field.</summary>
    public const int IsImageFieldNumber = 16;
    private bool isImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsImage {
      get { return isImage_; }
      set {
        isImage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdId != other.AdId) return false;
      if (ActionType != other.ActionType) return false;
      if (BtnTxtString != other.BtnTxtString) return false;
      if (IsBtnExists != other.IsBtnExists) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
      if (ActionUrl != other.ActionUrl) return false;
      if (VideoUrl != other.VideoUrl) return false;
      if (CoverImageUrl != other.CoverImageUrl) return false;
      if (CampaignId != other.CampaignId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Cost, other.Cost)) return false;
      if (DescriptionPrimary != other.DescriptionPrimary) return false;
      if (DescriptionPrimaryBold != other.DescriptionPrimaryBold) return false;
      if (DescriptionSecondary != other.DescriptionSecondary) return false;
      if (LogoUrl != other.LogoUrl) return false;
      if (!object.Equals(ExpiredAt, other.ExpiredAt)) return false;
      if (IsImage != other.IsImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      if (ActionType != 0UL) hash ^= ActionType.GetHashCode();
      if (BtnTxtString.Length != 0) hash ^= BtnTxtString.GetHashCode();
      if (IsBtnExists != false) hash ^= IsBtnExists.GetHashCode();
      if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
      if (ActionUrl.Length != 0) hash ^= ActionUrl.GetHashCode();
      if (VideoUrl.Length != 0) hash ^= VideoUrl.GetHashCode();
      if (CoverImageUrl.Length != 0) hash ^= CoverImageUrl.GetHashCode();
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (Cost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Cost);
      if (DescriptionPrimary.Length != 0) hash ^= DescriptionPrimary.GetHashCode();
      if (DescriptionPrimaryBold != false) hash ^= DescriptionPrimaryBold.GetHashCode();
      if (DescriptionSecondary.Length != 0) hash ^= DescriptionSecondary.GetHashCode();
      if (LogoUrl.Length != 0) hash ^= LogoUrl.GetHashCode();
      if (expiredAt_ != null) hash ^= ExpiredAt.GetHashCode();
      if (IsImage != false) hash ^= IsImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AdId);
      }
      if (ActionType != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ActionType);
      }
      if (BtnTxtString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BtnTxtString);
      }
      if (IsBtnExists != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsBtnExists);
      }
      if (Length != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Length);
      }
      if (ActionUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ActionUrl);
      }
      if (VideoUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VideoUrl);
      }
      if (CoverImageUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CoverImageUrl);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(CampaignId);
      }
      if (Cost != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Cost);
      }
      if (DescriptionPrimary.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DescriptionPrimary);
      }
      if (DescriptionPrimaryBold != false) {
        output.WriteRawTag(96);
        output.WriteBool(DescriptionPrimaryBold);
      }
      if (DescriptionSecondary.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DescriptionSecondary);
      }
      if (LogoUrl.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(LogoUrl);
      }
      if (expiredAt_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ExpiredAt);
      }
      if (IsImage != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      if (ActionType != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ActionType);
      }
      if (BtnTxtString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BtnTxtString);
      }
      if (IsBtnExists != false) {
        size += 1 + 1;
      }
      if (Length != 0D) {
        size += 1 + 8;
      }
      if (ActionUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUrl);
      }
      if (VideoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoUrl);
      }
      if (CoverImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoverImageUrl);
      }
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (Cost != 0D) {
        size += 1 + 8;
      }
      if (DescriptionPrimary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionPrimary);
      }
      if (DescriptionPrimaryBold != false) {
        size += 1 + 1;
      }
      if (DescriptionSecondary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionSecondary);
      }
      if (LogoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogoUrl);
      }
      if (expiredAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiredAt);
      }
      if (IsImage != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdResponse other) {
      if (other == null) {
        return;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      if (other.ActionType != 0UL) {
        ActionType = other.ActionType;
      }
      if (other.BtnTxtString.Length != 0) {
        BtnTxtString = other.BtnTxtString;
      }
      if (other.IsBtnExists != false) {
        IsBtnExists = other.IsBtnExists;
      }
      if (other.Length != 0D) {
        Length = other.Length;
      }
      if (other.ActionUrl.Length != 0) {
        ActionUrl = other.ActionUrl;
      }
      if (other.VideoUrl.Length != 0) {
        VideoUrl = other.VideoUrl;
      }
      if (other.CoverImageUrl.Length != 0) {
        CoverImageUrl = other.CoverImageUrl;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.Cost != 0D) {
        Cost = other.Cost;
      }
      if (other.DescriptionPrimary.Length != 0) {
        DescriptionPrimary = other.DescriptionPrimary;
      }
      if (other.DescriptionPrimaryBold != false) {
        DescriptionPrimaryBold = other.DescriptionPrimaryBold;
      }
      if (other.DescriptionSecondary.Length != 0) {
        DescriptionSecondary = other.DescriptionSecondary;
      }
      if (other.LogoUrl.Length != 0) {
        LogoUrl = other.LogoUrl;
      }
      if (other.expiredAt_ != null) {
        if (expiredAt_ == null) {
          ExpiredAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredAt.MergeFrom(other.ExpiredAt);
      }
      if (other.IsImage != false) {
        IsImage = other.IsImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdId = input.ReadUInt64();
            break;
          }
          case 16: {
            ActionType = input.ReadUInt64();
            break;
          }
          case 26: {
            BtnTxtString = input.ReadString();
            break;
          }
          case 32: {
            IsBtnExists = input.ReadBool();
            break;
          }
          case 41: {
            Length = input.ReadDouble();
            break;
          }
          case 50: {
            ActionUrl = input.ReadString();
            break;
          }
          case 58: {
            VideoUrl = input.ReadString();
            break;
          }
          case 66: {
            CoverImageUrl = input.ReadString();
            break;
          }
          case 72: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 81: {
            Cost = input.ReadDouble();
            break;
          }
          case 90: {
            DescriptionPrimary = input.ReadString();
            break;
          }
          case 96: {
            DescriptionPrimaryBold = input.ReadBool();
            break;
          }
          case 106: {
            DescriptionSecondary = input.ReadString();
            break;
          }
          case 114: {
            LogoUrl = input.ReadString();
            break;
          }
          case 122: {
            if (expiredAt_ == null) {
              ExpiredAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredAt);
            break;
          }
          case 128: {
            IsImage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YwRematchingResponse : pb::IMessage<YwRematchingResponse> {
    private static readonly pb::MessageParser<YwRematchingResponse> _parser = new pb::MessageParser<YwRematchingResponse>(() => new YwRematchingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YwRematchingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingResponse(YwRematchingResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YwRematchingResponse Clone() {
      return new YwRematchingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YwRematchingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YwRematchingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YwRematchingResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class YsRematchingResponse : pb::IMessage<YsRematchingResponse> {
    private static readonly pb::MessageParser<YsRematchingResponse> _parser = new pb::MessageParser<YsRematchingResponse>(() => new YsRematchingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YsRematchingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingResponse(YsRematchingResponse other) : this() {
      profiles_ = other.profiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsRematchingResponse Clone() {
      return new YsRematchingResponse(this);
    }

    /// <summary>Field number for the "profiles" field.</summary>
    public const int ProfilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.YsMatchedProfile> _repeated_profiles_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.YsMatchedProfile.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.YsMatchedProfile> profiles_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.YsMatchedProfile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.YsMatchedProfile> Profiles {
      get { return profiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YsRematchingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YsRematchingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profiles_.Equals(other.profiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      profiles_.WriteTo(output, _repeated_profiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += profiles_.CalculateSize(_repeated_profiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YsRematchingResponse other) {
      if (other == null) {
        return;
      }
      profiles_.Add(other.profiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profiles_.AddEntriesFrom(input, _repeated_profiles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YsMatchedProfile : pb::IMessage<YsMatchedProfile> {
    private static readonly pb::MessageParser<YsMatchedProfile> _parser = new pb::MessageParser<YsMatchedProfile>(() => new YsMatchedProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YsMatchedProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsMatchedProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsMatchedProfile(YsMatchedProfile other) : this() {
      login_ = other.login_;
      genderLocalized_ = other.genderLocalized_ != null ? other.genderLocalized_.Clone() : null;
      marriageLocalized_ = other.marriageLocalized_ != null ? other.marriageLocalized_.Clone() : null;
      parentalLocalized_ = other.parentalLocalized_ != null ? other.parentalLocalized_.Clone() : null;
      languageLocalized_ = other.languageLocalized_ != null ? other.languageLocalized_.Clone() : null;
      isReadyToChat_ = other.isReadyToChat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YsMatchedProfile Clone() {
      return new YsMatchedProfile(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "genderLocalized" field.</summary>
    public const int GenderLocalizedFieldNumber = 2;
    private global::You.Facade.Proxies.v1.NullableString genderLocalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableString GenderLocalized {
      get { return genderLocalized_; }
      set {
        genderLocalized_ = value;
      }
    }

    /// <summary>Field number for the "marriageLocalized" field.</summary>
    public const int MarriageLocalizedFieldNumber = 3;
    private global::You.Facade.Proxies.v1.NullableString marriageLocalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableString MarriageLocalized {
      get { return marriageLocalized_; }
      set {
        marriageLocalized_ = value;
      }
    }

    /// <summary>Field number for the "parentalLocalized" field.</summary>
    public const int ParentalLocalizedFieldNumber = 4;
    private global::You.Facade.Proxies.v1.NullableString parentalLocalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableString ParentalLocalized {
      get { return parentalLocalized_; }
      set {
        parentalLocalized_ = value;
      }
    }

    /// <summary>Field number for the "languageLocalized" field.</summary>
    public const int LanguageLocalizedFieldNumber = 5;
    private global::You.Facade.Proxies.v1.NullableString languageLocalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.NullableString LanguageLocalized {
      get { return languageLocalized_; }
      set {
        languageLocalized_ = value;
      }
    }

    /// <summary>Field number for the "isReadyToChat" field.</summary>
    public const int IsReadyToChatFieldNumber = 6;
    private bool isReadyToChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReadyToChat {
      get { return isReadyToChat_; }
      set {
        isReadyToChat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YsMatchedProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YsMatchedProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (!object.Equals(GenderLocalized, other.GenderLocalized)) return false;
      if (!object.Equals(MarriageLocalized, other.MarriageLocalized)) return false;
      if (!object.Equals(ParentalLocalized, other.ParentalLocalized)) return false;
      if (!object.Equals(LanguageLocalized, other.LanguageLocalized)) return false;
      if (IsReadyToChat != other.IsReadyToChat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (genderLocalized_ != null) hash ^= GenderLocalized.GetHashCode();
      if (marriageLocalized_ != null) hash ^= MarriageLocalized.GetHashCode();
      if (parentalLocalized_ != null) hash ^= ParentalLocalized.GetHashCode();
      if (languageLocalized_ != null) hash ^= LanguageLocalized.GetHashCode();
      if (IsReadyToChat != false) hash ^= IsReadyToChat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (genderLocalized_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GenderLocalized);
      }
      if (marriageLocalized_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarriageLocalized);
      }
      if (parentalLocalized_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ParentalLocalized);
      }
      if (languageLocalized_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LanguageLocalized);
      }
      if (IsReadyToChat != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsReadyToChat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (genderLocalized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenderLocalized);
      }
      if (marriageLocalized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarriageLocalized);
      }
      if (parentalLocalized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentalLocalized);
      }
      if (languageLocalized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LanguageLocalized);
      }
      if (IsReadyToChat != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YsMatchedProfile other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.genderLocalized_ != null) {
        if (genderLocalized_ == null) {
          GenderLocalized = new global::You.Facade.Proxies.v1.NullableString();
        }
        GenderLocalized.MergeFrom(other.GenderLocalized);
      }
      if (other.marriageLocalized_ != null) {
        if (marriageLocalized_ == null) {
          MarriageLocalized = new global::You.Facade.Proxies.v1.NullableString();
        }
        MarriageLocalized.MergeFrom(other.MarriageLocalized);
      }
      if (other.parentalLocalized_ != null) {
        if (parentalLocalized_ == null) {
          ParentalLocalized = new global::You.Facade.Proxies.v1.NullableString();
        }
        ParentalLocalized.MergeFrom(other.ParentalLocalized);
      }
      if (other.languageLocalized_ != null) {
        if (languageLocalized_ == null) {
          LanguageLocalized = new global::You.Facade.Proxies.v1.NullableString();
        }
        LanguageLocalized.MergeFrom(other.LanguageLocalized);
      }
      if (other.IsReadyToChat != false) {
        IsReadyToChat = other.IsReadyToChat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            if (genderLocalized_ == null) {
              GenderLocalized = new global::You.Facade.Proxies.v1.NullableString();
            }
            input.ReadMessage(GenderLocalized);
            break;
          }
          case 26: {
            if (marriageLocalized_ == null) {
              MarriageLocalized = new global::You.Facade.Proxies.v1.NullableString();
            }
            input.ReadMessage(MarriageLocalized);
            break;
          }
          case 34: {
            if (parentalLocalized_ == null) {
              ParentalLocalized = new global::You.Facade.Proxies.v1.NullableString();
            }
            input.ReadMessage(ParentalLocalized);
            break;
          }
          case 42: {
            if (languageLocalized_ == null) {
              LanguageLocalized = new global::You.Facade.Proxies.v1.NullableString();
            }
            input.ReadMessage(LanguageLocalized);
            break;
          }
          case 48: {
            IsReadyToChat = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectionableContentResponse : pb::IMessage<ObjectionableContentResponse> {
    private static readonly pb::MessageParser<ObjectionableContentResponse> _parser = new pb::MessageParser<ObjectionableContentResponse>(() => new ObjectionableContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectionableContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentResponse(ObjectionableContentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectionableContentResponse Clone() {
      return new ObjectionableContentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectionableContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectionableContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectionableContentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BlockProfileResponse : pb::IMessage<BlockProfileResponse> {
    private static readonly pb::MessageParser<BlockProfileResponse> _parser = new pb::MessageParser<BlockProfileResponse>(() => new BlockProfileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileResponse(BlockProfileResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockProfileResponse Clone() {
      return new BlockProfileResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockProfileResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BalanceReceivedEvent : pb::IMessage<BalanceReceivedEvent> {
    private static readonly pb::MessageParser<BalanceReceivedEvent> _parser = new pb::MessageParser<BalanceReceivedEvent>(() => new BalanceReceivedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceReceivedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReceivedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReceivedEvent(BalanceReceivedEvent other) : this() {
      available_ = other.available_;
      frozen_ = other.frozen_;
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReceivedEvent Clone() {
      return new BalanceReceivedEvent(this);
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 1;
    private double available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "frozen" field.</summary>
    public const int FrozenFieldNumber = 2;
    private double frozen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Frozen {
      get { return frozen_; }
      set {
        frozen_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 3;
    private global::You.Facade.Proxies.v1.Currency currency_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceReceivedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceReceivedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Available, other.Available)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Frozen, other.Frozen)) return false;
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Available != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Available);
      if (Frozen != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Frozen);
      if (Currency != 0) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Available != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Available);
      }
      if (Frozen != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Frozen);
      }
      if (Currency != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Available != 0D) {
        size += 1 + 8;
      }
      if (Frozen != 0D) {
        size += 1 + 8;
      }
      if (Currency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceReceivedEvent other) {
      if (other == null) {
        return;
      }
      if (other.Available != 0D) {
        Available = other.Available;
      }
      if (other.Frozen != 0D) {
        Frozen = other.Frozen;
      }
      if (other.Currency != 0) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Available = input.ReadDouble();
            break;
          }
          case 17: {
            Frozen = input.ReadDouble();
            break;
          }
          case 24: {
            Currency = (global::You.Facade.Proxies.v1.Currency) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PerkLockedEvent : pb::IMessage<PerkLockedEvent> {
    private static readonly pb::MessageParser<PerkLockedEvent> _parser = new pb::MessageParser<PerkLockedEvent>(() => new PerkLockedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerkLockedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerkLockedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerkLockedEvent(PerkLockedEvent other) : this() {
      basketId_ = other.basketId_;
      perkId_ = other.perkId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerkLockedEvent Clone() {
      return new PerkLockedEvent(this);
    }

    /// <summary>Field number for the "basketId" field.</summary>
    public const int BasketIdFieldNumber = 1;
    private ulong basketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasketId {
      get { return basketId_; }
      set {
        basketId_ = value;
      }
    }

    /// <summary>Field number for the "perkId" field.</summary>
    public const int PerkIdFieldNumber = 2;
    private ulong perkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PerkId {
      get { return perkId_; }
      set {
        perkId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerkLockedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerkLockedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasketId != other.BasketId) return false;
      if (PerkId != other.PerkId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasketId != 0UL) hash ^= BasketId.GetHashCode();
      if (PerkId != 0UL) hash ^= PerkId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasketId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasketId);
      }
      if (PerkId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PerkId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasketId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasketId);
      }
      if (PerkId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PerkId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerkLockedEvent other) {
      if (other == null) {
        return;
      }
      if (other.BasketId != 0UL) {
        BasketId = other.BasketId;
      }
      if (other.PerkId != 0UL) {
        PerkId = other.PerkId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasketId = input.ReadUInt64();
            break;
          }
          case 16: {
            PerkId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgBasketChangedEvent : pb::IMessage<YgBasketChangedEvent> {
    private static readonly pb::MessageParser<YgBasketChangedEvent> _parser = new pb::MessageParser<YgBasketChangedEvent>(() => new YgBasketChangedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgBasketChangedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketChangedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketChangedEvent(YgBasketChangedEvent other) : this() {
      ygBasketVisibilities_ = other.ygBasketVisibilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketChangedEvent Clone() {
      return new YgBasketChangedEvent(this);
    }

    /// <summary>Field number for the "YgBasketVisibilities" field.</summary>
    public const int YgBasketVisibilitiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent> _repeated_ygBasketVisibilities_codec
        = pb::FieldCodec.ForMessage(10, global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent.Parser);
    private readonly pbc::RepeatedField<global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent> ygBasketVisibilities_ = new pbc::RepeatedField<global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::You.Facade.Proxies.v1.YgBasketVisibilitiesEvent> YgBasketVisibilities {
      get { return ygBasketVisibilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgBasketChangedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgBasketChangedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ygBasketVisibilities_.Equals(other.ygBasketVisibilities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ygBasketVisibilities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ygBasketVisibilities_.WriteTo(output, _repeated_ygBasketVisibilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ygBasketVisibilities_.CalculateSize(_repeated_ygBasketVisibilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgBasketChangedEvent other) {
      if (other == null) {
        return;
      }
      ygBasketVisibilities_.Add(other.ygBasketVisibilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ygBasketVisibilities_.AddEntriesFrom(input, _repeated_ygBasketVisibilities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YgBasketVisibilitiesEvent : pb::IMessage<YgBasketVisibilitiesEvent> {
    private static readonly pb::MessageParser<YgBasketVisibilitiesEvent> _parser = new pb::MessageParser<YgBasketVisibilitiesEvent>(() => new YgBasketVisibilitiesEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YgBasketVisibilitiesEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketVisibilitiesEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketVisibilitiesEvent(YgBasketVisibilitiesEvent other) : this() {
      basketId_ = other.basketId_;
      isBasketVisible_ = other.isBasketVisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YgBasketVisibilitiesEvent Clone() {
      return new YgBasketVisibilitiesEvent(this);
    }

    /// <summary>Field number for the "basketId" field.</summary>
    public const int BasketIdFieldNumber = 1;
    private ulong basketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BasketId {
      get { return basketId_; }
      set {
        basketId_ = value;
      }
    }

    /// <summary>Field number for the "IsBasketVisible" field.</summary>
    public const int IsBasketVisibleFieldNumber = 2;
    private bool isBasketVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBasketVisible {
      get { return isBasketVisible_; }
      set {
        isBasketVisible_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YgBasketVisibilitiesEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YgBasketVisibilitiesEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasketId != other.BasketId) return false;
      if (IsBasketVisible != other.IsBasketVisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasketId != 0UL) hash ^= BasketId.GetHashCode();
      if (IsBasketVisible != false) hash ^= IsBasketVisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasketId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BasketId);
      }
      if (IsBasketVisible != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBasketVisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasketId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BasketId);
      }
      if (IsBasketVisible != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YgBasketVisibilitiesEvent other) {
      if (other == null) {
        return;
      }
      if (other.BasketId != 0UL) {
        BasketId = other.BasketId;
      }
      if (other.IsBasketVisible != false) {
        IsBasketVisible = other.IsBasketVisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasketId = input.ReadUInt64();
            break;
          }
          case 16: {
            IsBasketVisible = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProfileReplacedEvent : pb::IMessage<ProfileReplacedEvent> {
    private static readonly pb::MessageParser<ProfileReplacedEvent> _parser = new pb::MessageParser<ProfileReplacedEvent>(() => new ProfileReplacedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileReplacedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::You.Facade.Proxies.v1.RpcGatewayReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileReplacedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileReplacedEvent(ProfileReplacedEvent other) : this() {
      senderClientType_ = other.senderClientType_;
      publicInfo_ = other.publicInfo_ != null ? other.publicInfo_.Clone() : null;
      privateInfo_ = other.privateInfo_ != null ? other.privateInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileReplacedEvent Clone() {
      return new ProfileReplacedEvent(this);
    }

    /// <summary>Field number for the "senderClientType" field.</summary>
    public const int SenderClientTypeFieldNumber = 1;
    private global::You.Facade.Proxies.v1.ClientType senderClientType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.ClientType SenderClientType {
      get { return senderClientType_; }
      set {
        senderClientType_ = value;
      }
    }

    /// <summary>Field number for the "publicInfo" field.</summary>
    public const int PublicInfoFieldNumber = 2;
    private global::You.Facade.Proxies.v1.PublicInfo publicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PublicInfo PublicInfo {
      get { return publicInfo_; }
      set {
        publicInfo_ = value;
      }
    }

    /// <summary>Field number for the "privateInfo" field.</summary>
    public const int PrivateInfoFieldNumber = 3;
    private global::You.Facade.Proxies.v1.PrivateInfo privateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::You.Facade.Proxies.v1.PrivateInfo PrivateInfo {
      get { return privateInfo_; }
      set {
        privateInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileReplacedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileReplacedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderClientType != other.SenderClientType) return false;
      if (!object.Equals(PublicInfo, other.PublicInfo)) return false;
      if (!object.Equals(PrivateInfo, other.PrivateInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderClientType != 0) hash ^= SenderClientType.GetHashCode();
      if (publicInfo_ != null) hash ^= PublicInfo.GetHashCode();
      if (privateInfo_ != null) hash ^= PrivateInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SenderClientType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SenderClientType);
      }
      if (publicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicInfo);
      }
      if (privateInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PrivateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderClientType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SenderClientType);
      }
      if (publicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicInfo);
      }
      if (privateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileReplacedEvent other) {
      if (other == null) {
        return;
      }
      if (other.SenderClientType != 0) {
        SenderClientType = other.SenderClientType;
      }
      if (other.publicInfo_ != null) {
        if (publicInfo_ == null) {
          PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
        }
        PublicInfo.MergeFrom(other.PublicInfo);
      }
      if (other.privateInfo_ != null) {
        if (privateInfo_ == null) {
          PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
        }
        PrivateInfo.MergeFrom(other.PrivateInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SenderClientType = (global::You.Facade.Proxies.v1.ClientType) input.ReadEnum();
            break;
          }
          case 18: {
            if (publicInfo_ == null) {
              PublicInfo = new global::You.Facade.Proxies.v1.PublicInfo();
            }
            input.ReadMessage(PublicInfo);
            break;
          }
          case 26: {
            if (privateInfo_ == null) {
              PrivateInfo = new global::You.Facade.Proxies.v1.PrivateInfo();
            }
            input.ReadMessage(PrivateInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
